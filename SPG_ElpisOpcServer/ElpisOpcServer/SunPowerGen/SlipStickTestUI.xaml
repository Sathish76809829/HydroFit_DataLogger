<UserControl x:Class="ElpisOpcServer.SunPowerGen.SlipStickTestUI" Name="Slip_StickTest"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ElpisOpcServer.SunPowerGen"
             xmlns:local1="clr-namespace:Elpis.Windows.OPC.Server;assembly=OPCEngine"
             xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
             Loaded="Slip_StickTest_Loaded"
             mc:Ignorable="d" 
             d:DesignHeight="550" d:DesignWidth="900">
    <UserControl.Resources>
        <ControlTemplate x:Key="validationErrorTemplate">
            <DockPanel>
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom">
                    <Grid Width="12" Height="12">
                        <Ellipse Width="12" Height="12" Fill="Red" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <TextBlock Foreground="White" FontWeight="Heavy" FontSize="8" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"
                                   ToolTip="{Binding ElementName=ErrorAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" Text="X"/>
                    </Grid>
                    <TextBlock Foreground="Red" FontWeight="Bold"  Margin="2,0,0,0" Text="{Binding ElementName=ErrorAdorner, 
                        Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" TextWrapping="Wrap" Width="{Binding RelativeSource={RelativeSource AncestorType= {x:Type AdornedElementPlaceholder}}, Path=ActualWidth,Converter={local1:WidthConvertor Factor=24}}" />
                </StackPanel>
                <AdornedElementPlaceholder x:Name="ErrorAdorner" />
            </DockPanel>
        </ControlTemplate>

        <Style x:Key="ButtonEnableStyle" TargetType="Button">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Trigger.Setters>
                        <Setter Property="IsEnabled" Value="False"/>
                    </Trigger.Setters>
                </Trigger>

            </Style.Triggers>
        </Style>
        <Style x:Key="CustomTextBoxTextStyle" TargetType="TextBox">
            <Setter Property="Foreground" Value="Green" />
            <Setter Property="MaxLength" Value="40" />
            <!--<Setter Property="Width" Value="392" />-->
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Trigger.Setters>
                        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors)[0].ErrorContent}"/>
                        <Setter Property="BorderBrush" Value="Red"/>
                        <Setter Property="BorderThickness" Value="1"/>
                    </Trigger.Setters>
                </Trigger>

            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="AnimateForeground">
            <ControlTemplate.Triggers>
                <EventTrigger RoutedEvent="TextBlock.Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <!--Storyboard.TargetProperty="AnimateForeGround"-->
                            <ColorAnimation Storyboard.TargetProperty="Color"
                                                                From="DarkOrange" To="DarkBlue" Duration="0:0:3" AutoReverse="True" RepeatBehavior="Forever" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="PanelStyle" TargetType="WrapPanel">
            <Style.Resources>
                <Style TargetType="TextBox">
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Background" Value="White" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.Resources>

        </Style>
        <Style TargetType="Button" x:Key="ButtonStyle">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="Transparent" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="MyContentPresenter" 
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Center" 
                                          VerticalAlignment="Center" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <Style TargetType="Image">
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.Resources>
        </Style>
    </UserControl.Resources>



    <Grid Background="#FFF0E6DC" >
        <Grid.RowDefinitions>
            <RowDefinition Height="3.5*"/>
            <RowDefinition Height="6.5*" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Name="gridCeritificateInfo"  >
            <Grid.RowDefinitions>
                <RowDefinition Height="3.5*"/>
                <RowDefinition Height="15*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <StackPanel Name="spDeviceStatus" Orientation="Horizontal" VerticalAlignment="Center" Visibility="Hidden">
                    <TextBlock Text="Device Status: " Margin="10,0,0,0" FontWeight="Bold" />
                    <TextBlock Name="tbxDeviceStatus" Text="Disconnected"  />
                </StackPanel>
                <Label Name="lblTitle" Content="Slip Stick Test" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" FontSize="15" Foreground="Black" />
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Visibility="Hidden">
                    <Label x:Name="lblDateTime" Content="Date &amp; Time" HorizontalAlignment="Right"  VerticalAlignment="Top" Width="96" Visibility="Visible" />
                    <TextBlock x:Name="tbxDateTine" Height="23" TextWrapping="Wrap" VerticalAlignment="Top" Width="152" HorizontalAlignment="Right" Text="{Binding TestDateTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,5,0,0"/>
                </StackPanel>
                <Grid  HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,6,10,5.8" Width="341" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="182*"/>
                        <ColumnDefinition Width="127*"/>
                        <ColumnDefinition Width="32*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.ColumnSpan="2" Margin="0,0,73.8,-0.2">
                        <Label x:Name="lblTimer" Content="Data Read Interval (hh:mm:ss:ms)" HorizontalAlignment="Left"  VerticalAlignment="Top"  Visibility="Visible" Grid.ColumnSpan="3" Height="26"  Width="186" />
                    </StackPanel>
                    <WrapPanel  Name="DataIntervalPanal" Grid.Column="1" Margin="1.4,0,1.8,-0.2" IsEnabled="True" LostFocus="btnSaveOperation_Click">
                        <TextBox x:Name="txtTimer" Text="00"  MaxLength="2" VerticalAlignment="Center" HorizontalAlignment="Center" 
                              Visibility="Visible" Background="White" FontWeight="DemiBold" Grid.ColumnSpan="2" Height="18" Width="20" Grid.Column="1" TextChanged="txtTimer_TextChanged"  BorderThickness="0"/>
                        <Label Content=":" VerticalAlignment="Center" Height="30" />
                        <TextBox x:Name="txtTimerMin" Text="00" MaxLength="2"  TextWrapping="Wrap"  VerticalAlignment="Center" HorizontalAlignment="Center" 
                               Visibility="Visible" Background="White" FontWeight="DemiBold" Grid.ColumnSpan="2" Height="18" Width="20" Grid.Column="1" TextChanged="txtTimer_TextChanged"  BorderThickness="0"/>
                        <Label Content=":" VerticalAlignment="Center" Height="30" />
                        <TextBox x:Name="txtTimerSec"  Text="02" MaxLength="2"  TextWrapping="Wrap"  VerticalAlignment="Center" HorizontalAlignment="Center" 
                               Visibility="Visible" Background="White" FontWeight="DemiBold" Grid.ColumnSpan="2" Height="18" Width="20" Grid.Column="1" TextChanged="txtTimer_TextChanged" BorderThickness="0"/>
                        <Label Content=":" VerticalAlignment="Center" Height="30" />
                        <TextBox x:Name="txtTimerMilliSec" Text="000" MaxLength="3"   TextWrapping="Wrap"  VerticalAlignment="Center" HorizontalAlignment="Center" 
                               Visibility="Visible" Background="White" FontWeight="DemiBold" Grid.ColumnSpan="2" Height="18" Width="26" Grid.Column="1" TextChanged="txtTimer_TextChanged"   BorderThickness="0"/>
                    </WrapPanel>
                    <!--<WrapPanel Grid.Column="2" VerticalAlignment="Center" Height="12" Margin="0.2,6,-0.2,6.8">
                        <Button  Name="btnDataReadIntervalEdit" Style="{StaticResource ButtonStyle}"  Padding="0,0,5,0" HorizontalAlignment="Center" Click="btnEditOperation_Click" Width="20" >
                            <Button.Content>
                                <StackPanel Background="Transparent">
                                    <Image Source="/ElpisOpcServer;component/Images/EditB.png" Stretch="Fill" Width="12" Height="12"  />
                                </StackPanel>
                            </Button.Content>
                        </Button>

                        <Button  Name="btnDataReadIntervalSave" Style="{StaticResource ButtonStyle}" IsEnabled="False" Width="Auto" Height="Auto"  Padding="5,0,5,0" Click="btnSaveOperation_Click" >
                            <Button.Content>
                                <StackPanel>
                                    <Image Source="/ElpisOpcServer;component/Images/SaveB.png" Stretch="Fill" Width="12" Height="12" />
                                </StackPanel>
                            </Button.Content>
                        </Button>
                    </WrapPanel>-->

                    <!--<WrapPanel Style="{StaticResource PanelStyle}" Name="panelDataRead" IsEnabled="False" Width="121" >
                            <TextBox x:Name="txtTimer" MaxLength="2" TextWrapping="Wrap" Padding="2,0,2,0"  VerticalAlignment="Center" HorizontalAlignment="Right" Margin="5,0,-3,0"
                                                 Text="00"  Visibility="Visible" BorderThickness="0"  FontWeight="DemiBold" />-->
                    <!--TextChanged="txtTimer_TextChanged" MouseLeftButtonDown="txtTimer_MouseLeftButtonDown" LostFocus="txtTimerSec_LostFocus"   />-->
                    <!--
                            <Label Content=":" Width="12" VerticalAlignment="Stretch"/>
                            <TextBox x:Name="txtTimerMin"  MaxLength="2"  TextWrapping="Wrap"  VerticalAlignment="Center" HorizontalAlignment="Center" Padding="2,0,2,0" Margin="-3,0,-3,0"
                                                 Text="00"  Visibility="Visible" BorderThickness="0" FontWeight="DemiBold"/> -->
                    <!--TextChanged="txtTimer_TextChanged"  LostFocus="txtTimerSec_LostFocus"  />-->
                    <!--
                            <Label Content=":" Width="12" VerticalAlignment="Center"/>
                            <TextBox x:Name="txtTimerSec"  MaxLength="2" TextWrapping="Wrap"  VerticalAlignment="Center" HorizontalAlignment="Center" Margin="-3,0,-3,0"
                                                 Text="02"  Visibility="Visible" BorderThickness="0" Padding="2,0,2,0" FontWeight="DemiBold"/> -->
                    <!--TextChanged="txtTimer_TextChanged" LostFocus="txtTimerSec_LostFocus"    />-->
                    <!--
                            <Label Content=":" Width="12" VerticalAlignment="Center"/>
                        <TextBox x:Name="txtTimerMilliSec"  MaxLength="3" TextWrapping="Wrap"  VerticalAlignment="Center" HorizontalAlignment="Center" Margin="-3,0,-3,0"
                                                 Text="000"  Visibility="Visible" BorderThickness="0" Padding="2,0,2,0" FontWeight="DemiBold" />
                        -->
                    <!--TextChanged="txtTimer_TextChanged" LostFocus="txtTimerSec_LostFocus"    />-->
                    <!--
                    </WrapPanel>
                    <Button  Name="btnDataReadIntervalEdit" Style="{StaticResource ButtonStyle}" Margin="5,0,5,0" Padding="0,0,5,0" HorizontalAlignment="Left">
                        -->
                    <!--Click="btnEditOperation_Click" >-->
                    <!--
                                    <Button.Content>
                                        <StackPanel Background="Transparent">
                                            <Image Source="/ElpisOpcServer;component/Images/EditB.png" Stretch="Fill" Width="15" Height="15"  />
                                        </StackPanel>
                                    </Button.Content>
                                </Button>

                        <Button  Name="btnDataReadIntervalSave" Style="{StaticResource ButtonStyle}" IsEnabled="False" Width="Auto" Height="Auto" Margin="5,0,0,0" Padding="5,0,5,0" >
                        -->
                    <!--Click="btnSaveOperation_Click" >-->
                    <!--
                                    <Button.Content>
                                        <StackPanel>
                                            <Image Source="/ElpisOpcServer;component/Images/SaveB.png" Stretch="Fill" Width="15" Height="15" />
                                        </StackPanel>
                                    </Button.Content>
                                </Button>-->



                </Grid>

            </Grid>
            <Grid Name="gridMain" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="1" >
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="686*"/>
                        <ColumnDefinition Width="110*" />
                        
                    </Grid.ColumnDefinitions>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Grid.Column="0" Grid.ColumnSpan="2" Margin="0,0,125.45,0">
                        <Grid.ColumnDefinitions>
                            <!--<ColumnDefinition Width="2.3*"/>
                                <ColumnDefinition Width="2.2*" />-->
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="30*" />
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="22"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <!--<GroupBox Grid.Column="0" Margin="5,2,5,5" Foreground="#9D2933" BorderBrush="Orange" >
                                <GroupBox.Header>
                                    <TextBlock FontWeight="Bold">Certificate Information</TextBlock>
                                </GroupBox.Header>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        
                                    </Grid.RowDefinitions>
                                    <StackPanel Orientation="Vertical" Grid.Row="0">
                                        <Label Grid.Row="0" x:Name="lblCustName" Content="Customer Name" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                        <TextBox Grid.Row="1" x:Name="txtCustName"  HorizontalAlignment="Left" Height="23"  TextWrapping="Wrap" MinWidth="150" MaxWidth="170"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}">
                                            <TextBox.Text>
                                                <Binding Path="CustomerName" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnDataErrors="True">
                                                    <Binding.ValidationRules>
                                                        <local:MandatoryRule PropertyName="CustomerName"/>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </StackPanel>
                                    <StackPanel Orientation="Vertical" Grid.Row="1">
                                        <Label  Grid.Row="2" x:Name="lblJobNumber" Content="Job Number" HorizontalAlignment="Left"  VerticalAlignment="Top"/>
                                        <TextBox Grid.Row="3" x:Name="txtJobNumber" HorizontalAlignment="Left"  TextWrapping="Wrap"  MinWidth="150" MaxWidth="170" Height="23" TextChanged="txtJobNumber_TextChanged"
                                         Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" >
                                            
                                            <TextBox.Text>
                                                <Binding Path="JobNumber" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnDataErrors="True">
                                                    <Binding.ValidationRules>
                                                        <local:MandatoryRule PropertyName="JobNumber"/>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>

                                            </TextBox.Text>
                                        </TextBox>
                                    </StackPanel>
                                    <StackPanel Orientation="Vertical" Grid.Row="2">
                                        <Label Grid.Row="4" x:Name="lblReportNumber" Content="Report Number" HorizontalAlignment="Left" VerticalAlignment="Top" />
                                        <TextBox  Grid.Row="5" x:Name="txtReportNumber" Text="{Binding ReportNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" HorizontalAlignment="Left" MinHeight="23" Width="170" TextWrapping="Wrap" Background="WhiteSmoke" />
                                    </StackPanel>






                                </Grid>
                            </GroupBox>-->

                        <!--<GroupBox Grid.Column="1" Margin="10,2,5,5" Foreground="#9D2933" BorderBrush="Orange">
                                <GroupBox.Header>
                                    <TextBlock FontWeight="Bold">Cylinder Information</TextBlock>
                                </GroupBox.Header>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>                                        
                                    </Grid.RowDefinitions>
                                    <StackPanel Orientation="Vertical" Grid.Row="0">
                                        <Label Grid.Row="0" x:Name="lblBoreSize" Content="Bore Size" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                        <TextBox Grid.Row="1" x:Name="txtBoreSize" HorizontalAlignment="Left" Height="23" Width="100"  TextWrapping="Wrap"  VerticalAlignment="Center"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}">
                                            <TextBox.Text>
                                                <Binding Path="BoreSize" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnDataErrors="True">
                                                    <Binding.ValidationRules>
                                                        <local:MandatoryRule PropertyName="BoreSize"/>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </StackPanel>
                                    <StackPanel Orientation="Vertical" Grid.Row="1">
                                        <Label Grid.Row="2" x:Name="lblRodSize" Content="Rod Size" HorizontalAlignment="Left"  VerticalAlignment="Top"/>
                                        <TextBox Grid.Row="3" x:Name="txtRodSize" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" VerticalAlignment="Center"  Width="100"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}">
                                            <TextBox.Text>
                                                <Binding Path="RodSize" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnDataErrors="True">
                                                    <Binding.ValidationRules>
                                                        <local:MandatoryRule PropertyName="RodSize"/>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </StackPanel>
                                    <StackPanel Orientation="Vertical" Grid.Row="2">
                                        <Label Grid.Row="4" x:Name="lblStrokeLength" Content="Stroke Length" HorizontalAlignment="Left"  VerticalAlignment="Top"/>
                                        <TextBox Grid.Row="5" x:Name="txtStrokeLength" HorizontalAlignment="Left" Height="23"  TextWrapping="Wrap" VerticalAlignment="Center"  Width="100"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}">
                                            <TextBox.Text>
                                                <Binding Path="StrokeLength" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnDataErrors="True">
                                                    <Binding.ValidationRules>
                                                        <local:MandatoryRule PropertyName="StrokeLength"/>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>

                                            </TextBox.Text>
                                        </TextBox>
                                    </StackPanel>
                                </Grid>
                            </GroupBox>-->



                        <!--<Grid Grid.Column="0" HorizontalAlignment="Stretch">
                            <Grid Margin="10,2,0,5" >
                                <GroupBox Foreground="#9D2933" BorderBrush="Orange">
                                    <GroupBox.Header>
                                        <Grid  HorizontalAlignment="Stretch" >
                                            <TextBlock FontWeight="ExtraBold" TextAlignment="Center" >Pressure Setting</TextBlock>
                                        </Grid>
                                    </GroupBox.Header>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            -->
                        <!--<RowDefinition/>-->
                        <!--
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        -->
                        <!--<StackPanel Orientation="Vertical" Grid.Row="0">
                                            <TextBlock Grid.Row="0" x:Name="lblSetPressure" Text="Set Pressure" Height="23" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                            <TextBox Grid.Row="1" x:Name="txtPressure" HorizontalAlignment="Left" Height="23" Width="100"  TextWrapping="Wrap"  VerticalAlignment="Top"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}">
                                                <TextBox.Text>
                                                    <Binding Path="Pressure" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnDataErrors="True">
                                                        <Binding.ValidationRules>
                                                            <local:MandatoryRule PropertyName="Pressure"/>
                                                            <ExceptionValidationRule/>
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                        </StackPanel>-->
                        <!--
                                        <StackPanel Orientation="Vertical" Grid.Row="1">
                                            <TextBlock Grid.Row="0" x:Name="lblSetFlow" Text="Flow" Height="23" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                            <TextBox Grid.Row="1" x:Name="txtFlow" HorizontalAlignment="Left" Height="23" Width="100"  TextWrapping="Wrap"  VerticalAlignment="Top"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}">
                                                <TextBox.Text>
                                                    <Binding Path="Flow" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnDataErrors="True">
                                                        <Binding.ValidationRules>
                                                            <local:MandatoryRule PropertyName="Flow"/>
                                                            <ExceptionValidationRule/>
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                        </StackPanel>
                                    </Grid>
                                </GroupBox>
                            </Grid>
                        </Grid>-->


                        <StackPanel Orientation="Horizontal"  Grid.ColumnSpan="2" Margin="10,0,0,0">
                            <TextBlock x:Name="lblReportNumber" Text="Report Number" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="12" Margin="5,0,5,0" />
                            <TextBlock x:Name="txtReportNumber" Text="{Binding ReportNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Center"
                                             Height="Auto" Width="Auto" TextWrapping="Wrap" Foreground="DarkBlue" FontWeight="Bold" FontSize="12" Background="Transparent" />
                        </StackPanel>
                        <GroupBox Grid.Column="1" Margin="10,2,0,5" Grid.Row="1" Foreground="#9D2933" BorderBrush="Orange">
                            <GroupBox.Header>
                                <Grid  HorizontalAlignment="Stretch" >
                                    <TextBlock FontWeight="ExtraBold" TextAlignment="Center" >Device Live Data</TextBlock>
                                </Grid>
                            </GroupBox.Header>
                            <Grid>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Border BorderBrush="WhiteSmoke" Grid.Column="0" BorderThickness="1.5" CornerRadius="5" Margin="2,2,2,2" >
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="7.5*"/>
                                            <RowDefinition Height="2.5*"/>
                                        </Grid.RowDefinitions>

                                        <TextBlock Grid.Row="1" Text="Pressure" FontSize="15" HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap" Margin="5,0,5,0"/>
                                        <TextBlock Grid.Row="0" Name="txtCurrentPressure"  HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="40"  FontWeight="UltraBold"  FontFamily="Arial Black"
                                                           Text="{Binding Pressure, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap">
                                            <TextBlock.Foreground>
                                                <SolidColorBrush x:Name="AnimateForeground" Color="DarkBlue" />
                                            </TextBlock.Foreground>
                                            <TextBlock.Triggers>
                                                <EventTrigger RoutedEvent="TextBlock.Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ColorAnimation Storyboard.TargetName="AnimateForeground" Storyboard.TargetProperty="Color"
                                                                From="DarkBlue" To="DarkOrange" Duration="0:0:5" AutoReverse="True" RepeatBehavior="Forever" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </TextBlock.Triggers>
                                        </TextBlock>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="WhiteSmoke" Grid.Column="1" BorderThickness="1.5" CornerRadius="5" Margin="2,2,2,2" >
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="7.5*"/>
                                            <RowDefinition Height="2.5*"/>
                                        </Grid.RowDefinitions>

                                        <TextBlock Grid.Row="1" Text="Flow" FontSize="15"  TextAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap" Margin="5,0,5,0"/>
                                        <TextBlock Grid.Row="0" Name="txtFlow"  HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="40"  FontWeight="UltraBold"  FontFamily="Arial Black"
                                                           Text="{Binding Flow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap">
                                            <TextBlock.Foreground>
                                                <SolidColorBrush x:Name="AnimateForeground1" Color="DarkBlue" />
                                            </TextBlock.Foreground>
                                            <TextBlock.Triggers>
                                                <EventTrigger RoutedEvent="TextBlock.Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ColorAnimation Storyboard.TargetName="AnimateForeground1" Storyboard.TargetProperty="Color"
                                                                From="DarkOrange" To="DarkBlue" Duration="0:0:5" AutoReverse="True" RepeatBehavior="Forever" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </TextBlock.Triggers>
                                        </TextBlock>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="WhiteSmoke" Grid.Column="2" BorderThickness="1.5" CornerRadius="5" Margin="2,2,2,2" >
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="7.5*"/>
                                            <RowDefinition Height="2.5*"/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Grid.Row="1" Text="Cylinder Movement" TextAlignment="Center" FontSize="15" HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap"/>
                                        <TextBlock Grid.Row="0" Name="txtCylinderMovement" FontSize="40"  FontWeight="UltraBold"  FontFamily="Arial Black" VerticalAlignment="Center" HorizontalAlignment="Center" 
                                                           Text="{Binding CylinderMovement, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap">
                                            <TextBlock.Foreground>
                                                <SolidColorBrush x:Name="AnimateForeground2" Color="DarkBlue" />
                                            </TextBlock.Foreground>
                                            <TextBlock.Triggers>
                                                <EventTrigger RoutedEvent="TextBlock.Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ColorAnimation Storyboard.TargetName="AnimateForeground2" Storyboard.TargetProperty="Color"
                                                                From="DarkBlue" To="DarkOrange" Duration="0:0:5" AutoReverse="True" RepeatBehavior="Forever" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </TextBlock.Triggers>
                                        </TextBlock>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="WhiteSmoke" Grid.Column="3" BorderThickness="1.5" CornerRadius="5" Margin="2,2,2,2" >
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="7.5*"/>
                                            <RowDefinition Height="2.5*"/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Grid.Row="1" Text="Initial Pressure" TextAlignment="Center" FontSize="15" HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap"/>
                                        <TextBlock Grid.Row="0" Name="txtInitialPressure" FontSize="22"  FontWeight="UltraBold"  FontFamily="Arial Black" VerticalAlignment="Center" HorizontalAlignment="Center" 
                                                        Foreground="DarkBlue"   Text="{Binding InitialPressure, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap">
                                            <!--<TextBlock.Foreground>
                                                <SolidColorBrush x:Name="AnimateForeground3" Color="DarkBlue" />
                                            </TextBlock.Foreground>
                                            <TextBlock.Triggers>
                                                <EventTrigger RoutedEvent="TextBlock.Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ColorAnimation Storyboard.TargetName="AnimateForeground2" Storyboard.TargetProperty="Color"
                                                                From="DarkBlue" To="DarkOrange" Duration="0:0:5" AutoReverse="True" RepeatBehavior="Forever" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </TextBlock.Triggers>-->
                                        </TextBlock>
                                    </Grid>
                                </Border>
                            </Grid>
                        </GroupBox>
                    </Grid>
                    <Grid Grid.Column="1" >
                        <Grid.RowDefinitions>
                            <!--<RowDefinition Height="4.5*"/>-->
                            <RowDefinition Height="4*"/>
                            <RowDefinition Height="5*"/>
                            <!--<RowDefinition Height="1.7*"/>-->
                        </Grid.RowDefinitions>
                        <!--<Border BorderBrush="Brown" BorderThickness="1" CornerRadius="5" HorizontalAlignment="Stretch">
                            <StackPanel Margin="0,5,0,0">
                                <TextBlock Text="Initial Pressure" HorizontalAlignment="Center" FontWeight="Bold" TextAlignment="Center" TextWrapping="Wrap" />
                                <TextBlock x:Name="txtInitialPressure"  FontSize="20" FontWeight="Bold" Foreground="DarkBlue" VerticalAlignment="Center"  TextWrapping="Wrap" TextAlignment="Center" Width="Auto"
                                           Text="{Binding InitialPressure, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                -->
                        <!--Background="LimeGreen"-->
                        <!--
                            </StackPanel>
                        </Border>-->
                        <StackPanel Grid.Row="0" Orientation="Vertical" VerticalAlignment="Stretch" HorizontalAlignment="Center" >
                            <Button x:Name="btnStartStop" ToolTip="Start Record" Style="{StaticResource ButtonStyle}" Width="55"  HorizontalAlignment="Center" VerticalAlignment="Center" BorderBrush="Transparent" FontWeight="ExtraBold"  Click="btnStartStop_Click" Height="69"  >
                                <Button.Content>
                                    <StackPanel>
                                        <Image x:Name="imgStartStop" Source="/ElpisOpcServer;component/Images/starticon.png" VerticalAlignment="Center" HorizontalAlignment="Center" Height="55" Width="55" />
                                        <Label x:Name="lblStartStop" Content="Start Record" Visibility="Collapsed"/>
                                    </StackPanel>
                                </Button.Content>
                                
                                <!--old-->
                                <!--<Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    --><!--<Condition Binding="{Binding Path=(Validation.HasError), ElementName=txtJobNumber}" Value="False"/>
                                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=txtCustName}" Value="False"/>
                                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=txtPressure}" Value="False"/>
                                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=txtFlow}" Value="False"/>
                                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=txtRodSize}" Value="False"/>
                                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=txtBoreSize}" Value="False"/>
                                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=txtStrokeLength}" Value="False"/>--><!--
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>-->
                                <!--old-->
                            </Button>
                            <!--<Button x:Name="btnGenerateReport" ToolTip="Generate Report" Content="Generate Report" Width="120" Height="30" FontWeight="ExtraBold" Click="btnGenerateReport_Click" Visibility="Hidden" Padding="10,0,10,0"  />-->
                        </StackPanel>

                        <Border  Grid.Row="2" BorderBrush="Brown" BorderThickness="0" HorizontalAlignment="Stretch" VerticalAlignment="Center" Height="60">
                            <Grid  Grid.Row="0"  Height="60"  VerticalAlignment="Center" HorizontalAlignment="Center" Width="60">


                                <!--<TextBlock Text="Slip Stick Test Status" HorizontalAlignment="Center" VerticalAlignment="Top" FontWeight="Bold" TextAlignment="Center" TextWrapping="Wrap" Margin="0,-4,-0.6,0" Grid.ColumnSpan="2" />-->
                                <StackPanel Name="blbStateON" Visibility="Hidden">
                                    <Image  Source="/ElpisOpcServer;component/Images/Green_light.png"   Height="60" Width="60" ToolTip="Test is ON"/>
                                </StackPanel>
                                <StackPanel Name="blbStateOFF">
                                    <Image  Source="/ElpisOpcServer;component/Images/white_blub.png"  Height="60 " Width="60" ToolTip="Test is OFF"/>
                                </StackPanel>
                                <!--<TextBlock x:Name="txtTriggerStatus" Text="{Binding SlipStickTestStatus}" Foreground="Red" HorizontalAlignment="Center" FontSize="15" FontWeight="Bold"  VerticalAlignment="Center"  TextWrapping="Wrap" TextAlignment="Center" Width="Auto" Height="20" Grid.ColumnSpan="2" Margin="0,10,0,0" />-->


                                <!--Background="LimeGreen"-->
                            </Grid>
                        </Border>

                    </Grid>
                </Grid>
            </Grid>
        </Grid>

        <Grid Grid.Row="1"  Background="WhiteSmoke">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <!--<ColumnDefinition/>-->
            </Grid.ColumnDefinitions>

            <!--old-->
            <!--<dvc:Chart Name="mcChart" Title="Flow Vs Time"
           Width="400" Height="300"
           Background="LightSteelBlue">
                <dvc:Chart.Axes>
                    <dvc:LinearAxis Orientation="Y" Title="Flow" />
                    <dvc:LinearAxis Orientation="X" Title="Time"  />
                </dvc:Chart.Axes>
                <dvc:Chart.Series>

                    <dvc:LineSeries Title="Flow1"
            IndependentValueBinding="{Binding Path=Key}"
            DependentValueBinding="{Binding Path=Value}"
                                    ItemsSource="{Binding collection}">
                    </dvc:LineSeries>
                  
                </dvc:Chart.Series>
            </dvc:Chart>-->


            <!--<ContentPresenter Name="content" />-->
            <!--old-->

            <lvc:CartesianChart Name="chartPressure" Series="{Binding PressureSeriesCollection}" LegendLocation="Top" Background="White" Margin="5"   >
                
                <lvc:CartesianChart.AxisY>
                    <lvc:AxesCollection>
                        <lvc:Axis Title="Pressure" LabelFormatter="{Binding YFormatter}" Labels="{Binding  }" >
                        </lvc:Axis>
                    </lvc:AxesCollection>
                </lvc:CartesianChart.AxisY>
                <lvc:CartesianChart.AxisX>
                    <lvc:AxesCollection>
                        <lvc:Axis Name="pressureXAxis" Title="Cylinder Movement" Labels="{Binding CylinderMovementLabels}" LabelsRotation="15"></lvc:Axis>
                    </lvc:AxesCollection>
                </lvc:CartesianChart.AxisX>
            </lvc:CartesianChart>
        </Grid>
    </Grid>
</UserControl>
