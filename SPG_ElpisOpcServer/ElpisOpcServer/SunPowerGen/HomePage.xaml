<UserControl x:Class="ElpisOpcServer.SunPowerGen.HomePage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ElpisOpcServer.SunPowerGen"
             xmlns:local1="clr-namespace:Elpis.Windows.OPC.Server;assembly=OPCEngine"    
              xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
             mc:Ignorable="d" 
             d:DesignHeight="900" d:DesignWidth="900" Loaded="UserControl_Loaded">

    <UserControl.Resources>
        <ResourceDictionary>
            <ControlTemplate x:Key="validationErrorTemplate" >
                <DockPanel >
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom">
                        <Grid Width="10" Height="10">
                            <Ellipse Width="11" Height="11" Fill="Red" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            <TextBlock Foreground="White" FontWeight="Heavy" FontSize="6" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"
                                   ToolTip="{Binding ElementName=ErrorAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" Text="X"/>
                        </Grid>
                        <TextBlock Foreground="Red" FontSize="10" FontWeight="Medium" Margin="1,0,0,0" Text="{Binding ElementName=ErrorAdorner, 
                        Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" TextWrapping="Wrap"
                               Width="{Binding RelativeSource={RelativeSource AncestorType= {x:Type ControlTemplate }, AncestorLevel=3}, Path=ActualWidth,Converter={local1:WidthConvertor Factor=15}}"/>
                    </StackPanel>
                    <AdornedElementPlaceholder x:Name="ErrorAdorner" />
                </DockPanel>
            </ControlTemplate>

            <Style x:Key="ButtonEnableStyle" TargetType="Button">
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Trigger.Setters>
                            <Setter Property="IsEnabled" Value="False"/>
                        </Trigger.Setters>
                    </Trigger>

                </Style.Triggers>
            </Style>
            <Style x:Key="CustomTextBoxTextStyle" TargetType="TextBox">
                <Setter Property="Foreground" Value="Green" />
                <Setter Property="MaxLength" Value="40" />
                <!--<Setter Property="Width" Value="392" />-->
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Trigger.Setters>
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors)[0].ErrorContent}"/>
                            <Setter Property="BorderBrush" Value="Red"/>
                            <Setter Property="BorderThickness" Value="1"/>
                        </Trigger.Setters>
                    </Trigger>

                </Style.Triggers>
            </Style>

            <ControlTemplate x:Key="AnimateForeground">
                <ControlTemplate.Triggers>
                    <EventTrigger RoutedEvent="TextBlock.Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <!--Storyboard.TargetProperty="AnimateForeGround"-->
                                <ColorAnimation Storyboard.TargetProperty="Color"
                                                                From="DarkOrange" To="DarkBlue" Duration="0:0:3" AutoReverse="True" RepeatBehavior="Forever" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="PanelStyle" TargetType="WrapPanel">
                <Style.Resources>
                    <Style TargetType="TextBox">
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter Property="Background" Value="White" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Style.Resources>

            </Style>


            <Style TargetType="Button" x:Key="ButtonStyle">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="Black" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid Background="{TemplateBinding Background}">
                                <ContentPresenter x:Name="MyContentPresenter" 
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Center" 
                                          VerticalAlignment="Center" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="Transparent"/>
                    </Trigger>
                </Style.Triggers>
                <Style.Resources>
                    <Style TargetType="Image">
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.3" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Style.Resources>
            </Style>
            <SolidColorBrush x:Key="Expander.MouseOver.Circle.Stroke" Color="#FF5593FF"/>
            <SolidColorBrush x:Key="Expander.MouseOver.Circle.Fill" Color="#FFF3F9FF"/>
            <SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="#FF000000"/>
            <SolidColorBrush x:Key="Expander.Pressed.Circle.Stroke" Color="#FF3C77DD"/>
            <SolidColorBrush x:Key="Expander.Pressed.Circle.Fill" Color="#FFD9ECFF"/>
            <SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="#FF000000"/>
            <SolidColorBrush x:Key="Expander.Disabled.Circle.Stroke" Color="#FFBCBCBC"/>
            <SolidColorBrush x:Key="Expander.Disabled.Circle.Fill" Color="#FFE6E6E6"/>
            <SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="#FF707070"/>
            <SolidColorBrush x:Key="Expander.Static.Circle.Fill" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="Expander.Static.Circle.Stroke" Color="#FF333333"/>
            <SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="#FF333333"/>
            <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="19"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Grid>
                                        <Grid.LayoutTransform>
                                            <TransformGroup>
                                                <TransformGroup.Children>
                                                    <TransformCollection>
                                                        <RotateTransform Angle="-90"/>
                                                    </TransformCollection>
                                                </TransformGroup.Children>
                                            </TransformGroup>
                                        </Grid.LayoutTransform>
                                        <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="10" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="10"/>
                                        <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                                    </Grid>
                                    <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Bottom"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                                    <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                    <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                                    <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="19"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid>
                                        <Grid.LayoutTransform>
                                            <TransformGroup>
                                                <TransformGroup.Children>
                                                    <TransformCollection>
                                                        <RotateTransform Angle="180"/>
                                                    </TransformCollection>
                                                </TransformGroup.Children>
                                            </TransformGroup>
                                        </Grid.LayoutTransform>
                                        <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="14" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="14"/>
                                        <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                                    </Grid>
                                    <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                                    <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                    <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                                    <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="19"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Grid>
                                        <Grid.LayoutTransform>
                                            <TransformGroup>
                                                <TransformGroup.Children>
                                                    <TransformCollection>
                                                        <RotateTransform Angle="90"/>
                                                    </TransformCollection>
                                                </TransformGroup.Children>
                                            </TransformGroup>
                                        </Grid.LayoutTransform>
                                        <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                                        <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                                    </Grid>
                                    <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                                    <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                    <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                                    <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderHeaderFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border>
                                <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="19"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                                    <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                                    <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                                    <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                    <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                                    <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderStyle1" TargetType="{x:Type Expander}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Expander}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                                <DockPanel>
                                    <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{DynamicResource ToggleButtonStyle1}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </DockPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="true">
                                    <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="ExpandDirection" Value="Right">
                                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                                    <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
                                </Trigger>
                                <Trigger Property="ExpandDirection" Value="Up">
                                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                                    <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
                                </Trigger>
                                <Trigger Property="ExpandDirection" Value="Left">
                                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                                    <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="19"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="10" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                                    <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                                    <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                                    <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                    <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                                    <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                                    <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/ElpisOpcServer;component/styles/common.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Background="#FFF0E6DC">
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="9*"/>
            <RowDefinition Height="24" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="180"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="200"/>
            </Grid.ColumnDefinitions>
            <Image Grid.Column="0" Name="imgLogo" Source="Images/elpis_logo.png " Height="70" Width="170" Margin="5,0,5,0"/>
            <!--//sunpowerLogo_EngOnly.jpg"/>-->
            <StackPanel Grid.Column="1">
                <TextBlock TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center"  FontSize="18" Foreground="Black">Elpis Report Generation</TextBlock>

                <TextBlock x:Name="txtMainHeading" Text="Cylinder Testing" FontWeight="DemiBold" FontSize="15" Foreground="DarkBlue" HorizontalAlignment="Center"/>
            </StackPanel>
            <Border BorderBrush="WhiteSmoke" BorderThickness="1"  Grid.Column="2" >
                <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="4,0,0,0">
                    <Grid Margin="0,0,3,0">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3.5*"/>
                            <ColumnDefinition Width="7*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Connector"/>
                        <TextBlock Name="txtSelectedConnector" Grid.Row="0" Grid.Column="1" Text="None" FontWeight="DemiBold"/>
                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Device"/>
                        <TextBlock Name="txtSelectedDevice" Grid.Row="1" Grid.Column="1" Text="None" FontWeight="DemiBold"/>
                    </Grid>
                </StackPanel>
            </Border>

        </Grid>
        <Grid Grid.Row="1" Background="LightBlue" Visibility="Collapsed">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4*"/>
                <ColumnDefinition Width="1.5*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" Background="#FFF0E6DC">
                <Expander Name="expanderCertificate" Grid.Column="0" Expanded="expanderCertificate_Expanded" Collapsed="expanderCertificate_Collapsed" Visibility="Collapsed" >
                    <Expander.Header>
                        <TextBlock Text="Certificate&amp;Cylinder Information" Background="LightBlue" Height="20" Width="900"/>
                        <!--Width="{Binding ElementName=expanderCertificate, Path=ActualWidth}"/>-->
                    </Expander.Header>
                    <Grid Name="gridMain" Background="#FFF0E6DC">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0" Grid.Column="0" Background="#FFF0E6DC">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3.2*"/>
                                <ColumnDefinition Width="4.5*"/>
                            </Grid.ColumnDefinitions>

                            <GroupBox Grid.Column="0" Margin="5,2,0,5" Foreground="#9D2933" BorderBrush="Orange" >
                                <GroupBox.Header>
                                    <TextBlock FontWeight="Bold">Certificate Information</TextBlock>
                                </GroupBox.Header>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="1" Margin="0,0,0,7">
                                        <Label Grid.Row="0" x:Name="lblCustName" Content="Customer Name" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                        <TextBox Grid.Row="1" x:Name="txtCustName"  HorizontalAlignment="Left" Height="Auto"  TextWrapping="Wrap"   MinWidth="130" MaxLength="16" Width="Auto"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="2">
                                            <TextBox.Text>
                                                <Binding Path="CustomerName" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                    <Binding.ValidationRules>
                                                        <local:MandatoryRule PropertyName="CustomerName"/>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </StackPanel>
                                    <Grid Grid.Row="0" Grid.Column="0" Margin="0,0,3,7">
                                        <StackPanel Orientation="Vertical" Grid.Column="0">
                                            <Label  Grid.Row="2" x:Name="lblJobNumber" Content="Job Number" HorizontalAlignment="Left"  VerticalAlignment="Top" Height="Auto"/>
                                            <TextBox Grid.Row="3" x:Name="txtJobNumber" HorizontalAlignment="Left"  TextWrapping="Wrap" MaxLength="10"  MinWidth="130" Width="Auto" Height="Auto" TextChanged="txtJobNumber_TextChanged"
                                         Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" TabIndex="1" Style="{StaticResource CustomTextBoxTextStyle}" >
                                                <!--{Binding JobNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True }-->
                                                <TextBox.Text>
                                                    <Binding Path="JobNumber" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                        <Binding.ValidationRules>
                                                            <local:MandatoryRule PropertyName="JobNumber"/>
                                                            <ExceptionValidationRule/>
                                                        </Binding.ValidationRules>
                                                    </Binding>

                                                </TextBox.Text>
                                            </TextBox>
                                        </StackPanel>
                                    </Grid>
                                    <StackPanel Orientation="Vertical" Grid.Row="1" Grid.ColumnSpan="2" Margin="0,0,0,10" Visibility="Hidden">
                                        <Label Grid.Row="4" x:Name="lblReportNumber" Content="Report Number" HorizontalAlignment="Left" VerticalAlignment="Top" />
                                        <TextBox  Grid.Row="5" x:Name="txtReportNumber" Text="{Binding ReportNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" HorizontalAlignment="Left" 
                                             Height="Auto"  MinWidth="150" Width="Auto" TextWrapping="Wrap" Background="WhiteSmoke" />
                                    </StackPanel>
                                </Grid>
                            </GroupBox>

                            <GroupBox Grid.Column="1" Margin="5,2,5,5" Foreground="#9D2933" BorderBrush="Orange">
                                <GroupBox.Header>
                                    <TextBlock FontWeight="Bold">Cylinder Information</TextBlock>
                                </GroupBox.Header>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0" >
                                        <StackPanel Orientation="Vertical"  Margin="5,0,0,7">
                                            <Label  Grid.Row="0" x:Name="lblCylinderNumber" Content="Cylinder Number" HorizontalAlignment="Left"  VerticalAlignment="Top"/>
                                            <TextBox Grid.Row="1" x:Name="txtCylinderNumber" HorizontalAlignment="Left"  TextWrapping="Wrap" MinWidth="100" MaxLength="10" Width="Auto" Height="Auto"
                                         Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="3" >
                                                <TextBox.Text>
                                                    <Binding Path="CylinderNumber" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                        <Binding.ValidationRules>
                                                            <local:MandatoryRule PropertyName="Cylinder Number"/>
                                                            <ExceptionValidationRule/>
                                                        </Binding.ValidationRules>
                                                    </Binding>

                                                </TextBox.Text>
                                            </TextBox>
                                        </StackPanel>
                                        <StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="0" Margin="50,0,0,5">
                                            <Label Grid.Row="0" x:Name="lblRodSize" Content="Rod Size" HorizontalAlignment="Left"  VerticalAlignment="Top"/>
                                            <TextBox Grid.Row="1" x:Name="txtRodSize" HorizontalAlignment="Left" Height="Auto" TextWrapping="Wrap" VerticalAlignment="Center"  Width="100"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="5">
                                                <TextBox.Text>
                                                    <Binding Path="RodSize" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                        <Binding.ValidationRules>
                                                            <local:MandatoryRule PropertyName="RodSize"/>
                                                            <ExceptionValidationRule/>
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                        </StackPanel>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="1"  Margin="5,0,0,5">
                                        <StackPanel Orientation="Vertical"  Margin="5,0,0,5">
                                            <Label Grid.Row="0" x:Name="lblBoreSize" Content="Bore Size" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                            <TextBox Grid.Row="1" x:Name="txtBoreSize" HorizontalAlignment="Left" Height="Auto" Width="100"  TextWrapping="Wrap"  VerticalAlignment="Center"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="4">
                                                <TextBox.Text>
                                                    <Binding Path="BoreSize" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                        <Binding.ValidationRules>
                                                            <local:MandatoryRule PropertyName="BoreSize"/>
                                                            <ExceptionValidationRule/>
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                        </StackPanel>

                                        <StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="1" Margin="50,0,0,5">
                                            <Label Grid.Row="0" x:Name="lblStrokeLength" Content="Stroke Length" HorizontalAlignment="Left"  VerticalAlignment="Top"/>
                                            <TextBox Grid.Row="1" x:Name="txtStrokeLength" HorizontalAlignment="Left" Height="Auto"  TextWrapping="Wrap" VerticalAlignment="Center"  Width="100"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="6">
                                                <TextBox.Text>
                                                    <Binding Path="StrokeLength" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                        <Binding.ValidationRules>
                                                            <local:MandatoryRule PropertyName="StrokeLength"/>
                                                            <ExceptionValidationRule/>
                                                        </Binding.ValidationRules>
                                                    </Binding>

                                                </TextBox.Text>
                                            </TextBox>
                                        </StackPanel>
                                    </StackPanel>
                                </Grid>
                            </GroupBox>

                        </Grid>
                    </Grid>
                </Expander>
                <!--pump expander block-->
                <!--<Expander Name="PumpExpanderCertificate" Grid.Column="0" Expanded="PumpExpanderCertificate_Expanded" Collapsed="expanderCertificate_Collapsed"  IsExpanded="True">
                    <Expander.Header>
                        <TextBlock Text="Certificate&amp;Cylinder Information" Background="LightBlue" Height="20" Width="900"/>
                        --><!--Width="{Binding ElementName=expanderCertificate, Path=ActualWidth}"/>--><!--
                    </Expander.Header>
                    --><!--<Grid Name="PumpGridMain" Background="#FFF0E6DC">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0" Grid.Column="0" Background="#FFF0E6DC">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="118*"/>
                                <ColumnDefinition Width="267*"/>
                                <ColumnDefinition Width="300*"/>
                            </Grid.ColumnDefinitions>

                            <GroupBox Grid.Column="0" Margin="5,2,5,5" Foreground="#9D2933" BorderBrush="Orange" >
                                <GroupBox.Header>
                                    <TextBlock FontWeight="Bold">General Details</TextBlock>
                                </GroupBox.Header>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Grid Grid.Row="0" Grid.Column="0" Margin="2">
                                        <StackPanel Orientation="Vertical" Grid.Column="0">
                                            <Label  Grid.Row="2" x:Name="lblPumpJobNumber" Content="Job Number" HorizontalAlignment="Left"  VerticalAlignment="Top" Height="Auto"/>
                                            <TextBox Grid.Row="3" x:Name="txtPumpJobNumber" HorizontalAlignment="Left"    MinWidth="100" Width="Auto" Height="Auto" TextChanged="txtJobNumber_TextChanged"
                                         Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" TabIndex="1" Style="{StaticResource CustomTextBoxTextStyle}" >
                                                --><!--{Binding JobNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True }--><!--
                                                <TextBox.Text>
                                                    <Binding Path="PumpJobNumber" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                        <Binding.ValidationRules>
                                                            <local:MandatoryRule PropertyName="PumpJobNumber"/>
                                                            <ExceptionValidationRule/>
                                                        </Binding.ValidationRules>
                                                    </Binding>

                                                </TextBox.Text>
                                            </TextBox>
                                        </StackPanel>
                                    </Grid>
                                    <StackPanel Orientation="Vertical" Grid.Row="1" Grid.Column="0" Margin="2" >
                                        <Label Grid.Row="4" x:Name="lblPumpReportNumber" Content="Report Number" HorizontalAlignment="Left" VerticalAlignment="Top" />
                                        <TextBox Grid.Row="3" x:Name="txtPumpReportNumber" HorizontalAlignment="Left"    MinWidth="100" Width="Auto" Height="Auto" TextChanged="TxtPumpReportNumber_TextChanged"
                                         Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" TabIndex="1" Style="{StaticResource CustomTextBoxTextStyle}" >
                                            --><!--{Binding JobNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True }--><!--
                                            <TextBox.Text>
                                                <Binding Path="PumpReportNumber" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                    <Binding.ValidationRules>
                                                        <local:MandatoryRule PropertyName="PumpReportNumber"/>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>

                                            </TextBox.Text>
                                        </TextBox>
                                    </StackPanel>
                                    <Grid Grid.Row="2" Grid.Column="0" Margin="2">
                                        <StackPanel Orientation="Vertical" Grid.Column="0" Visibility="Collapsed">
                                            <Label  Grid.Row="2" x:Name="lblPumpSPGSerialNo" Content="SPG Serial No" HorizontalAlignment="Left"  VerticalAlignment="Top" Height="Auto"/>
                                            <TextBox Grid.Row="3" x:Name="txtPumpSPGSerialNo" HorizontalAlignment="Left"    MinWidth="150" Width="Auto" Height="Auto" TextChanged="txtJobNumber_TextChanged"
                                         Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" TabIndex="1" Style="{StaticResource CustomTextBoxTextStyle}" >
                                                --><!--{Binding JobNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True }--><!--
                                                <TextBox.Text>
                                                    <Binding Path="PumpSPGSerialNo" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                        <Binding.ValidationRules>
                                                            <local:MandatoryRule PropertyName="PumpSPGSerialNo"/>
                                                            <ExceptionValidationRule/>
                                                        </Binding.ValidationRules>
                                                    </Binding>

                                                </TextBox.Text>
                                            </TextBox>
                                        </StackPanel>
                                    </Grid>
                                </Grid>
                            </GroupBox>

                            <GroupBox Grid.Column="1" Margin="5,2,5,5" Foreground="#9D2933" BorderBrush="Orange">
                                <GroupBox.Header>
                                    <TextBlock FontWeight="Bold">Equipment Details</TextBlock>
                                </GroupBox.Header>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="53*"/>
                                        <ColumnDefinition Width="51*"/>
                                        <ColumnDefinition Width="103*"/>
                                        <ColumnDefinition Width="103*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="0" Margin="2" Grid.ColumnSpan="2">
                                        <Label Grid.Row="0" x:Name="lblEqipCustomerName" Content="Customer Name" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                        <TextBox Grid.Row="1" x:Name="txtEqipCustomerName"  HorizontalAlignment="Left" Height="Auto"  TextWrapping="Wrap"  MinWidth="100" Width="Auto"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="2">
                                            <TextBox.Text>
                                                <Binding Path="EqipCustomerName" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                    <Binding.ValidationRules>
                                                        <local:MandatoryRule PropertyName="EqipCustomerName"/>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </StackPanel>

                                    <StackPanel Orientation="Vertical"  Grid.Row="0" Grid.Column="3" Margin="2">

                                        <Label  Grid.Row="0" x:Name="lblEquipManufacturer" Content="Manufacturer" HorizontalAlignment="Left"  VerticalAlignment="Top"/>
                                        <TextBox Grid.Row="1" x:Name="txtEquipManufacturer" HorizontalAlignment="Left"  TextWrapping="Wrap" MinWidth="100" Width="Auto" Height="Auto"
                                         Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="3" >
                                            <TextBox.Text>
                                                <Binding Path="EquipManufacturer" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                    <Binding.ValidationRules>
                                                        <local:MandatoryRule PropertyName="EquipManufacturer"/>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>

                                            </TextBox.Text>
                                        </TextBox>
                                    </StackPanel>
                                    <StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="2" Margin="2">
                                        <Label Grid.Row="0" x:Name="lblEquipType" Content="Type" HorizontalAlignment="Left"  VerticalAlignment="Top"/>
                                        <TextBox Grid.Row="1" x:Name="txtEquipType" HorizontalAlignment="Left" Height="Auto" TextWrapping="Wrap" VerticalAlignment="Center"  MinWidth="100"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="5">
                                            <TextBox.Text>
                                                <Binding Path="EquipType" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                    <Binding.ValidationRules>
                                                        <local:MandatoryRule PropertyName="EquipType"/>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="0"  Margin="2" Grid.ColumnSpan="2">
                                        <StackPanel Orientation="Vertical"  >
                                            <Label Grid.Row="0" x:Name="lblEquipModelNo" Content="Model No" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                            <TextBox Grid.Row="1" x:Name="txtEquipModelNo" HorizontalAlignment="Left" Height="Auto" MinWidth="100"  TextWrapping="Wrap"  VerticalAlignment="Center"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="4">
                                                <TextBox.Text>
                                                    <Binding Path="EquipModelNo" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                        <Binding.ValidationRules>
                                                            <local:MandatoryRule PropertyName="EquipModelNo"/>
                                                            <ExceptionValidationRule/>
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                        </StackPanel>


                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="2"  Margin="2">
                                        <StackPanel Orientation="Vertical"  >
                                            <Label Grid.Row="0" x:Name="lblEquipSerialNo" Content="Serial No" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                            <TextBox Grid.Row="1" x:Name="txtEquipSerialNo" HorizontalAlignment="Left" Height="Auto" MinWidth="100"  TextWrapping="Wrap"  VerticalAlignment="Center"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="4">
                                                <TextBox.Text>
                                                    <Binding Path="EquipSerialNo" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                        <Binding.ValidationRules>
                                                            <local:MandatoryRule PropertyName="EquipSerialNo"/>
                                                            <ExceptionValidationRule/>
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                        </StackPanel>


                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="3"  Margin="2">
                                        <StackPanel Orientation="Vertical"  >
                                            <Label Grid.Row="0" x:Name="lblEquipControlType" Content="Control Type" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                            <TextBox Grid.Row="1" x:Name="txtEquipControlType" HorizontalAlignment="Left" Height="Auto" MinWidth="100"  TextWrapping="Wrap"  VerticalAlignment="Center"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="4">
                                                <TextBox.Text>
                                                    <Binding Path="EquipControlType" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                        <Binding.ValidationRules>
                                                            <local:MandatoryRule PropertyName="EquipControlType"/>
                                                            <ExceptionValidationRule/>
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                        </StackPanel>


                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="0"  Margin="2" Grid.ColumnSpan="2">
                                        <StackPanel Orientation="Vertical"  >
                                            <Label Grid.Row="0" x:Name="lblEquipPumpType" Content="Pump Type" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                            <TextBox Grid.Row="1" x:Name="txtEquipPumpType" HorizontalAlignment="Left" Height="Auto" MinWidth="100"  TextWrapping="Wrap"  VerticalAlignment="Center"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="4">
                                                <TextBox.Text>
                                                    <Binding Path="EquipPumpType" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                        <Binding.ValidationRules>
                                                            <local:MandatoryRule PropertyName="EquipPumpType"/>
                                                            <ExceptionValidationRule/>
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                        </StackPanel>


                                    </StackPanel>


                                </Grid>
                            </GroupBox>

                            <GroupBox Grid.Column="2" Margin="5,2,0,5" Foreground="#9D2933" BorderBrush="Orange">
                                <GroupBox.Header>
                                    <TextBlock FontWeight="Bold">Test Bench Details</TextBlock>
                                </GroupBox.Header>
                                <Grid Margin="0,0,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>

                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="0" Margin="1">
                                        <Label Grid.Row="0" x:Name="lblTestManufacturer" Content="Manufacturer" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                        <TextBox Grid.Row="1" x:Name="txtTestManufacturer" HorizontalAlignment="Left" Height="Auto"  MinWidth="100" Width="Auto"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="2">
                                            <TextBox.Text>
                                                <Binding Path="TestManufacture" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                    <Binding.ValidationRules>
                                                        <local:MandatoryRule PropertyName="TestManufacture"/>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </StackPanel>

                                    <StackPanel Orientation="Vertical"  Grid.Row="0" Grid.Column="2" Margin="2">
                                        <Label  Grid.Row="0" x:Name="lblTestType" Content="Type" HorizontalAlignment="Left"  VerticalAlignment="Top"/>
                                        <TextBox Grid.Row="1" x:Name="txtTestType"  HorizontalAlignment="Left"  MinWidth="100"  Height="Auto"
                                         Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="3" >
                                            <TextBox.Text>
                                                <Binding Path="TestType" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                    <Binding.ValidationRules>
                                                        <local:MandatoryRule PropertyName="TestType"/>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>

                                            </TextBox.Text>
                                        </TextBox>
                                    </StackPanel>
                                   

                                    <StackPanel Orientation="Vertical" Grid.Row="2" Grid.Column="0" Margin="2">
                                        <Label Grid.Row="0" x:Name="lblTestedBy" Content="TestedBy" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                        <TextBox Grid.Row="1" x:Name="txtTestedBy"   HorizontalAlignment="Left" Height="Auto"  MinWidth="100"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="6">
                                            <TextBox.Text>
                                                <Binding Path="TestedBy" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                    <Binding.ValidationRules>
                                                        <local:MandatoryRule PropertyName="TestedBy"/>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </StackPanel>
                                    <StackPanel Orientation="Vertical" Grid.Row="2" Grid.Column="1" Margin="2">
                                        <Label Grid.Row="0" x:Name="lblWitnessedBy" Content="WitnessedBy" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                        <TextBox Grid.Row="1" x:Name="txtWitnessedBy"   HorizontalAlignment="Left" Height="Auto"  MinWidth="100" 
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="6">
                                            <TextBox.Text>
                                                <Binding Path="WitnessedBy" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                    <Binding.ValidationRules>
                                                        <local:MandatoryRule PropertyName="WitnessedBy"/>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </StackPanel>
                                    <StackPanel Orientation="Vertical" Grid.Row="2" Grid.Column="2" Margin="2">
                                        <Label Grid.Row="0" x:Name="lblApprovedBy" Content="ApprovedBy" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                        <TextBox Grid.Row="1" x:Name="txtApprovedBy"   HorizontalAlignment="Left" Height="Auto"  MinWidth="100"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="6">
                                            <TextBox.Text>
                                                <Binding Path="ApprovedBy" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                    <Binding.ValidationRules>
                                                        <local:MandatoryRule PropertyName="ApprovedBy"/>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </StackPanel>






                                    <StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="1" Margin="2">
                                        <Label Grid.Row="0" x:Name="lblTestSerialNo" Content="Serial No" HorizontalAlignment="Left"  VerticalAlignment="Top"/>
                                        <TextBox Grid.Row="1" x:Name="txtTestSerialNo" HorizontalAlignment="Left" Height="Auto" TextWrapping="Wrap" VerticalAlignment="Center" MinWidth="100"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="5">
                                            <TextBox.Text>
                                                <Binding Path="TestSerialNo" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                    <Binding.ValidationRules>
                                                        <local:MandatoryRule PropertyName="TestSerialNo"/>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="0"  Margin="2">
                                        <StackPanel Orientation="Vertical"  >
                                            <Label Grid.Row="0" x:Name="lblTestRange" Content="Range" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                            <TextBox Grid.Row="1" x:Name="txtTestRange"  HorizontalAlignment="Left" Height="Auto" MinWidth="100" TextWrapping="Wrap"  VerticalAlignment="Center"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="4">
                                                <TextBox.Text>
                                                    <Binding Path="TestRange" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                        <Binding.ValidationRules>
                                                            <local:MandatoryRule PropertyName="TestRange"/>
                                                            <ExceptionValidationRule/>
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                        </StackPanel>
                                    </StackPanel>
                                    --><!-- <StackPanel Orientation="Vertical" Grid.Row="2" Grid.Column="1" Margin="2">
                                        <Label Grid.Row="0" x:Name="lblWItnessedBy" Content="WItnessedBy" HorizontalAlignment="Left"  VerticalAlignment="Top"/>
                                        <TextBox Grid.Row="1" x:Name="txtWItnessedBy" HorizontalAlignment="Left" Height="Auto" TextWrapping="Wrap" VerticalAlignment="Center" MinWidth="150"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="7">
                                            <TextBox.Text>
                                                <Binding Path="TestSerialNo" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                    <Binding.ValidationRules>
                                                        <local:MandatoryRule PropertyName="TestSerialNo"/>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </StackPanel>--><!--
                                </Grid>
                            </GroupBox>
                            --><!--                                MyUpdate-->
                            <!--<GroupBox Grid.Column="3" Margin="5,2,0,5" Foreground="#9D2933" BorderBrush="Orange">
                                <GroupBox.Header>
                                    <TextBlock FontWeight="Bold">Test Approved Details</TextBlock>
                                </GroupBox.Header>
                                <Grid >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>

                                    <StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="0" Margin="2">
                                        <Label Grid.Row="0" x:Name="lblTestedBye" Content="TestedBye" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                        <TextBox Grid.Row="1" x:Name="txtTestedBye"   HorizontalAlignment="Left" Height="Auto"  MinWidth="150" Width="Auto"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="6">
                                            <TextBox.Text>
                                                <Binding Path="TestedBye" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                    <Binding.ValidationRules>
                                                        <local:MandatoryRule PropertyName="TestedBye"/>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </StackPanel>
                                    <StackPanel Orientation="Vertical" Grid.Row="1" Grid.Column="0" Margin="2">
                                        <Label Grid.Row="0" x:Name="lblWitnessedBye" Content="WitnessedBye" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                        <TextBox Grid.Row="1" x:Name="txtWitnessedBye"   HorizontalAlignment="Left" Height="Auto"  MinWidth="150" Width="Auto"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="6">
                                            <TextBox.Text>
                                                <Binding Path="WitnessedBye" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                    <Binding.ValidationRules>
                                                        <local:MandatoryRule PropertyName="WitnessedBye"/>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </StackPanel>
                                    <StackPanel Orientation="Vertical" Grid.Row="2" Grid.Column="0" Margin="2">
                                        <Label Grid.Row="0" x:Name="lblApprovedBye" Content="ApprovedBye" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                        <TextBox Grid.Row="1" x:Name="txtApprovedBye"   HorizontalAlignment="Left" Height="Auto"  MinWidth="150" Width="Auto"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="6">
                                            <TextBox.Text>
                                                <Binding Path="ApprovedBye" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                    <Binding.ValidationRules>
                                                        <local:MandatoryRule PropertyName="ApprovedBye"/>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </StackPanel>

                                </Grid>
                            </GroupBox>--><!--
                        </Grid>
                      
                    </Grid>--><!--
                </Expander>-->
            </Grid>

<!--Generatr-->
            <!--<Border Grid.Column="1"  BorderBrush="WhiteSmoke" BorderThickness="2" CornerRadius="5">
                <Grid  Background="#FFF0E6DC" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="7*"/>
                        <RowDefinition Height="8*"/>
                    </Grid.RowDefinitions>
                   
                    <StackPanel --><!--Name="spGenerateReport" Grid.Row="0" Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Right">
                        --><!--<Button Name="btnFileload" VerticalAlignment="Center" HorizontalAlignment="Right">
                            <Button.Content>
                                <StackPanel>
                                    <Label>Upload</Label>
                                </StackPanel>
                            </Button.Content>

                        </Button>-->
                        <!--GenerateButton-->
                        <!--<Button x:Name="btnGenerateReport" Style="{StaticResource ButtonStyle}" ToolTip="Generate Report" Background="Transparent"  VerticalAlignment="Center" FontWeight="ExtraBold" BorderBrush="Transparent" Click="btnGenerateReport_Click" IsEnabled="True" Padding="10,5,10,5" Margin="5,4,5,0">
                            <Button.Content>
                                <StackPanel>
                                    <Image Source="/ElpisOpcServer;component/Images/generate_report.png" Width="30" HorizontalAlignment="Center"/>
                                    <TextBlock Text="Generate Report" FontSize="8"/>
                                </StackPanel>
                            </Button.Content>
                        </Button>-->
                          
                        
                        
                        <!--   RESET Button-->
                        <!--<Button Name="btnReset" Style="{StaticResource ButtonStyle}"  VerticalAlignment="Center" HorizontalAlignment="Center" Background="Transparent" BorderBrush="Transparent" ToolTip="Reset Test" FontWeight="ExtraBold" Padding="10,2,10,2" Click="btnReset_Click" Margin="5,5,5,5" >
                            <Button.Content>
                                <StackPanel>
                                    <Image Source="/ElpisOpcServer;component/Images/refresh.png" Width="50"/>
                                </StackPanel>
                            </Button.Content>
                        </Button>--><!--
                        
                       
                    </StackPanel>-->
                    <!--<StackPanel Grid.Row="1" Name="panelStatusMessage" Orientation="Horizontal" Margin="5,0,0,0" HorizontalAlignment="Right" VerticalAlignment="Center" Visibility="Hidden" >
                        --><!--<TextBlock Text="Status: "  Margin="1,0,4,0" FontSize="12"/>--><!--
                        <TextBlock Text="* " FontSize="14" Foreground="Red"/>
                        <TextBlock Name="txtStatusMessage" FontSize="14" TextWrapping="Wrap" Foreground="DarkBlue"  FontWeight="Bold"  />
                        <Button Name="btnfileLoad" ></Button>
                    </StackPanel>-->
                    <!--<StackPanel Grid.Row="1" Name="FileUpload" Orientation="Horizontal" Margin="5,0,0,0" HorizontalAlignment="left" VerticalAlignment="Center" Visibility="Visible">
                        
                    </StackPanel>--><!--
                    
                </Grid>
            </Border>-->
        </Grid>
        <Grid Grid.Row="2" Background="LightBlue" Margin="0,3,0,0" >
            <!--<Expander Name="expanderTestInfo" Expanded="expanderTestInfo_Expanded" Collapsed="expanderTestInfo_Collapsed">
                <Expander.Header>
                    <TextBlock Text="Test Information" Background="LightBlue"/>
                </Expander.Header>-->
            <Grid Background="#FFF0E6DC">
                <Grid.RowDefinitions>
                    <!--<RowDefinition Height="35"/>-->
                    <RowDefinition Height="0"/>
                    <RowDefinition Height="*"/>

                </Grid.RowDefinitions>
                <!--<Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="150"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="60"/>
                        </Grid.ColumnDefinitions>
                        <Image Grid.Column="0" Name="imgLogo" Source="Images/sunpowerLogo_EngOnly.jpg "/>                       
                        <TextBlock TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" FontSize="20" Foreground="Black">SunPowerGen Report Generation</TextBlock>
                       
                    </Grid>-->

                <Border Grid.Row="1" BorderBrush="Transparent" BorderThickness="1">
                    <TabControl Name="mainTabControl" SelectionChanged="mainTabControl_SelectionChanged"  TabStripPlacement="Left" Background="#FFF0E6DC" RenderTransformOrigin="0.494,0.549">
                       
                        <TabItem Name="ReportTab">
                            <TabItem.Header>
                                <StackPanel Orientation="Horizontal"  >
                                    <Image Name="img1" Height="30" Width="30" Source="/ElpisOpcServer;component/Images/report-setting.png" />
                                    <TextBlock Text="Report Settings" Margin="2,0,0,0" VerticalAlignment="Center" FontWeight="DemiBold" />
                                </StackPanel>
                            </TabItem.Header>
                            <TabItem.Style>
                                <Style TargetType="{x:Type TabItem}">
                                    <Setter Property="HeaderTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <ContentPresenter Content="{TemplateBinding Content}">
                                                    <ContentPresenter.LayoutTransform>
                                                        <RotateTransform Angle="270" />
                                                    </ContentPresenter.LayoutTransform>
                                                </ContentPresenter>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Padding" Value="0,10,0,10" />
                                </Style>

                            </TabItem.Style>
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="90"/>
                                    <RowDefinition Height="130"/>
                                    <RowDefinition Height="130"/>
                                   
                                   
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Border Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="6" Margin="0,10,0,0" BorderThickness="2" VerticalAlignment="Top" BorderBrush="WhiteSmoke" CornerRadius="10" Grid.RowSpan="10">
                                    <Grid Grid.Column="1" Grid.ColumnSpan="5">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="1*"/>
                                            <RowDefinition Height="12*"/>
                                        </Grid.RowDefinitions>
                                        <Grid Grid.Row="0" Margin="0,5,0,5">
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="DemiBold" FontSize="14">
                                Report Configuration Settings
                                            </TextBlock>
                                        </Grid>
                                        <StackPanel Grid.Row="1" HorizontalAlignment="Stretch" Margin="0,0,0,83" Height="auto">
                                            <Grid  HorizontalAlignment="Stretch" Margin="0,10,0,10">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" Text="Report Prefix" Margin="15,0,0,0"/>
                                                <TextBox Name="txtReportPrefix" Grid.Column="1" Grid.ColumnSpan="2" MaxLength="14"  IsEnabled="False" TextChanged="txtReportPrefix_TextChanged"/>
                                                <WrapPanel Grid.Column="4" HorizontalAlignment="Center">
                                                    <Button Name="btnReportPrefixEdit" Style="{StaticResource ButtonStyle}" Height="Auto" Width="Auto" Margin="5,0,5,0" Padding="5,0,5,0" HorizontalAlignment="Left" Click="btnEditOperation_Click" >
                                                        <Button.Content>
                                                            <StackPanel Background="Transparent" >
                                                                <Image Source="/ElpisOpcServer;component/Images/EditB.png"  Stretch="Fill" Width="15" Height="15" />
                                                            </StackPanel>
                                                        </Button.Content>
                                                    </Button>

                                                    <Button Name="btnReportPrefixSave" Style="{StaticResource ButtonStyle}" IsEnabled="False" Width="Auto" Height="Auto" Margin="5,0,0,0" Padding="5,0,5,0" HorizontalAlignment="Left" Click="btnSaveOperation_Click" >
                                                        <Button.Content>
                                                            <StackPanel>
                                                                <Image Source="/ElpisOpcServer;component/Images/SaveB.png" Stretch="Fill" Width="15" Height="15" />
                                                            </StackPanel>
                                                        </Button.Content>
                                                    </Button>
                                                </WrapPanel>
                                            </Grid>

                                            <Grid Name="txtFilePath"  HorizontalAlignment="Stretch" Margin="0,10,0,10">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" Text="Report Location" Margin="15,0,0,0"/>
                                                <TextBox Name="txtReportLocation" Grid.Column="1" Grid.ColumnSpan="3" Margin="0,0,0,0" IsEnabled="False"  TextWrapping="Wrap"/>
                                                <WrapPanel Grid.Column="4" HorizontalAlignment="Center">
                                                    <Button Name="btnReportLocationEdit" Style="{StaticResource ButtonStyle}" Width="Auto" Margin="5,0,5,0" Padding="5,0,5,0" HorizontalAlignment="Center" Click="btnEditOperation_Click" >
                                                        <Button.Content>
                                                            <StackPanel Background="Transparent" >
                                                                <Image Source="/ElpisOpcServer;component/Images/EditB.png" Stretch="Fill" Width="15" Height="15" />
                                                            </StackPanel>
                                                        </Button.Content>
                                                    </Button>

                                                    <Button Name="btnReportLocationSave" Style="{StaticResource ButtonStyle}" IsEnabled="False" Width="Auto" Height="Auto" Margin="5,0,0,0" Padding="5,0,5,0" HorizontalAlignment="Left" Click="btnSaveOperation_Click" >
                                                        <Button.Content>
                                                            <StackPanel>
                                                                <Image Source="/ElpisOpcServer;component/Images/SaveB.png" Stretch="Fill" Width="15" Height="15" />
                                                            </StackPanel>
                                                        </Button.Content>
                                                    </Button>
                                                </WrapPanel>
                                            </Grid>

                                            <Grid  HorizontalAlignment="Stretch" Margin="0,10,0,10" Visibility="Collapsed">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="115*"/>
                                                    <ColumnDefinition Width="129*"/>
                                                    <ColumnDefinition Width="102*"/>
                                                    <ColumnDefinition Width="115*"/>
                                                    <ColumnDefinition Width="116*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock  Grid.Column="0" Text="Data Read Interval " Margin="15,6,0.2,6" VerticalAlignment="Center" Height="16"/>
                                                <Border Grid.ColumnSpan="4" Margin="115,0,114.8,0">
                                                    <StackPanel Grid.Column="1" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">

                                                        <Border  BorderBrush="#FFABADB3" BorderThickness="1.2" Width="Auto" Padding="0,0,8,0">
                                                            <WrapPanel Style="{StaticResource PanelStyle}" Name="panelDataRead" IsEnabled="False" Width="125" >
                                                                <TextBox x:Name="txtTimer" MaxLength="2" TextWrapping="Wrap" Padding="2,0,2,0"  VerticalAlignment="Center" HorizontalAlignment="Right" Margin="5,0,-3,0"
                                                 Text="00"  Visibility="Visible" BorderThickness="0"  FontWeight="DemiBold" TextChanged="txtTimer_TextChanged" MouseLeftButtonDown="txtTimer_MouseLeftButtonDown" LostFocus="txtTimerSec_LostFocus"   />
                                                                <Label Content=":" Width="12" VerticalAlignment="Stretch"/>
                                                                <TextBox x:Name="txtTimerMin"  MaxLength="2"  TextWrapping="Wrap"  VerticalAlignment="Center" HorizontalAlignment="Center" Padding="2,0,2,0" Margin="-3,0,-3,0"
                                                 Text="00"  Visibility="Visible" BorderThickness="0" FontWeight="DemiBold" TextChanged="txtTimer_TextChanged"  LostFocus="txtTimerSec_LostFocus"  />
                                                                <Label Content=":" Width="12" VerticalAlignment="Center"/>
                                                                <TextBox x:Name="txtTimerSec"  MaxLength="2" TextWrapping="Wrap"  VerticalAlignment="Center" HorizontalAlignment="Center" Margin="-3,0,-3,0"
                                                 Text="02"  Visibility="Visible" BorderThickness="0" Padding="2,0,2,0" FontWeight="DemiBold" TextChanged="txtTimer_TextChanged" LostFocus="txtTimerSec_LostFocus"    />
                                                                <Label Content=":" Width="12" VerticalAlignment="Center"/>
                                                                <TextBox x:Name="txtTimerMilliSec"  MaxLength="3" TextWrapping="Wrap"  VerticalAlignment="Center" HorizontalAlignment="Center" Margin="-3,0,-3,0"
                                                 Text="000"  Visibility="Visible" BorderThickness="0" Padding="2,0,2,0" FontWeight="DemiBold" TextChanged="txtTimer_TextChanged" LostFocus="txtTimerSec_LostFocus"    />

                                                            </WrapPanel>
                                                        </Border>
                                                        <TextBlock VerticalAlignment="Center" Margin="10,0,0,0"> (HH:MM:SS:MS)</TextBlock>
                                                    </StackPanel>
                                                </Border>
                                                <WrapPanel Grid.Column="4" VerticalAlignment="Center" HorizontalAlignment="Center" Height="16" Margin="35.2,6,34.8,6" Width="46">
                                                    <Button  Name="btnDataReadIntervalEdit" Style="{StaticResource ButtonStyle}" Margin="5,0,5,0" Padding="0,0,5,0" HorizontalAlignment="Center" Click="btnEditOperation_Click" >
                                                        <Button.Content>
                                                            <StackPanel Background="Transparent">
                                                                <Image Source="/ElpisOpcServer;component/Images/EditB.png" Stretch="Fill" Width="15" Height="15"  />
                                                            </StackPanel>
                                                        </Button.Content>
                                                    </Button>

                                                    <Button Grid.Column="3" Name="btnDataReadIntervalSave" Style="{StaticResource ButtonStyle}" IsEnabled="False" Width="Auto" Height="Auto" Margin="5,0,0,0" Padding="5,0,5,0" Click="btnSaveOperation_Click" >
                                                        <Button.Content>
                                                            <StackPanel>
                                                                <Image Source="/ElpisOpcServer;component/Images/SaveB.png" Stretch="Fill" Width="15" Height="15" />
                                                            </StackPanel>
                                                        </Button.Content>
                                                    </Button>
                                                </WrapPanel>
                                            </Grid>

                                            <Grid  HorizontalAlignment="Stretch" Margin="10,10,0,10">
                                                <TextBlock FontWeight="SemiBold">
                                        Select of Connector and Device for Communication
                                                </TextBlock>
                                            </Grid>

                                            <Grid  HorizontalAlignment="Stretch" Margin="0,10,0,10">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" Grid.ColumnSpan="2" Margin="15,0,0,0" Text="Connector for Communication"/>
                                                <!--<TextBox Grid.Column="2"  Text="123456" IsReadOnly="True"/>-->
                                                <ComboBox Grid.Column="2" Name="cmbConnectorList" SelectionChanged="cmbConnectorList_SelectionChanged" IsEnabled="False" IsEditable="False" MinWidth="130" MaxWidth="180" HorizontalContentAlignment="Stretch"/>
                                                <WrapPanel Grid.Column="4" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                    <Button Grid.Column="3" Name="btnConnectorEdit" Style="{StaticResource ButtonStyle}" Width="Auto" Margin="5,0,5,0" Padding="5,0,5,0" HorizontalAlignment="Left" Click="btnEditOperation_Click" >
                                                        <Button.Content>
                                                            <StackPanel Background="Transparent" >
                                                                <Image Source="/ElpisOpcServer;component/Images/EditB.png" Stretch="Fill" Width="15" Height="15"/>
                                                            </StackPanel>
                                                        </Button.Content>
                                                    </Button>

                                                    <Button Grid.Column="3" Name="btnConnectorSave" Style="{StaticResource ButtonStyle}" IsEnabled="False" Width="Auto" Margin="5,0,0,0" Padding="5,0,5,0"  HorizontalAlignment="Left" Click="btnSaveOperation_Click" >
                                                        <Button.Content>
                                                            <StackPanel>
                                                                <Image Source="/ElpisOpcServer;component/Images/SaveB.png" Stretch="Fill" Width="15" Height="15" />
                                                            </StackPanel>
                                                        </Button.Content>
                                                    </Button>
                                                </WrapPanel>
                                            </Grid>

                                            <Grid  HorizontalAlignment="Stretch" Margin="0,10,0,25">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" Grid.ColumnSpan="2" Margin="15,0,0,0" Text="Device for Communication"/>

                                                <ComboBox Grid.Column="2" Name="cmbDeviceList" IsEditable="False" MinWidth="130" MaxWidth="180" IsEnabled="False" SelectionChanged="cmbDeviceList_SelectionChanged" HorizontalContentAlignment="Stretch"/>

                                                <WrapPanel Grid.Column="4" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                    <Button Grid.Column="3" Name="btnDeviceEdit" Style="{StaticResource ButtonStyle}" Margin="5,0,5,0" Padding="5,0,5,0" HorizontalAlignment="Left" Click="btnEditOperation_Click" >
                                                        <Button.Content>
                                                            <StackPanel Background="Transparent" >
                                                                <Image Source="/ElpisOpcServer;component/Images/EditB.png" Stretch="Fill" Width="15" Height="15" />
                                                            </StackPanel>
                                                        </Button.Content>
                                                    </Button>

                                                    <Button Grid.Column="3" Name="btnDeviceSave" Width="Auto" Margin="5,0,0,0" Style="{StaticResource ButtonStyle}" IsEnabled="False" Padding="5,0,5,0" HorizontalAlignment="Left" Click="btnSaveOperation_Click" >
                                                        <Button.Content>
                                                            <StackPanel>
                                                                <Image Source="/ElpisOpcServer;component/Images/SaveB.png" Stretch="Fill" Width="15" Height="15" />
                                                            </StackPanel>
                                                        </Button.Content>
                                                    </Button>
                                                </WrapPanel>
                                                
                                            </Grid>
                                            <TextBlock Name="txtStatus" Text="Configuration Status:" FontWeight="DemiBold" Padding="5,0,0,0" Foreground="DarkBlue" TextWrapping="Wrap" />
                                        </StackPanel>
                                    </Grid>
                                </Border>


                                <Grid Name="gridStatus" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="6" HorizontalAlignment="Left" VerticalAlignment="top" Margin="10,40,0,0">
                                    <StackPanel>
                                        <WrapPanel>
                                            <TextBlock Text="Configuration Status: " Visibility="Collapsed" FontWeight="DemiBold"/>
                                            <TextBlock Name="txtStatus1"   Padding="5,0,0,0" Foreground="DarkBlue" TextWrapping="Wrap" />
                                        </WrapPanel>
                                        <TextBlock Name="txtErrorInfo" Visibility="Collapsed" Padding="10,2,0,0" TextWrapping="Wrap" RenderTransformOrigin="0.504,0.5"/>
                                    </StackPanel>
                                    
                                </Grid>
                            </Grid>
                        </TabItem>
                        <TabItem>
                            <TabItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Configuration" VerticalAlignment="Center" FontWeight="ExtraBold" Height="30" Width="30"/>
                                </StackPanel>
                               
                            </TabItem.Header>
                            <TabItem.Style>
                                <Style TargetType="{x:Type TabItem}">
                                    <Setter Property="HeaderTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <ContentPresenter Content="Configuration" >
                                                    <ContentPresenter.LayoutTransform>
                                                        <RotateTransform Angle="270"/>
                                                    </ContentPresenter.LayoutTransform>
                                                </ContentPresenter>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>

                            </TabItem.Style>
                            <Grid Name="PumpGridMain" Background="#FFF0E6DC">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="10*"/>
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="0" Grid.Column="0" Background="#FFF0E6DC">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="118*"/>
                                        <ColumnDefinition Width="267*"/>
                                        <ColumnDefinition Width="300*"/>
                                    </Grid.ColumnDefinitions>

                                    <GroupBox Grid.Column="0" Margin="5,2,5,5" Foreground="#9D2933" BorderBrush="Orange" Height="200" VerticalAlignment="Top" >
                                        <GroupBox.Header>
                                            <TextBlock FontWeight="Bold">General Details</TextBlock>
                                        </GroupBox.Header>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Grid Grid.Row="0" Grid.Column="0" Margin="2">
                                                <StackPanel Orientation="Vertical" Grid.Column="0">
                                                    <Label  Grid.Row="2" x:Name="lblPumpJobNumber" Content="Job Number" HorizontalAlignment="Left"  VerticalAlignment="Top" Height="Auto"/>
                                                    <TextBox Grid.Row="3" x:Name="txtPumpJobNumber" HorizontalAlignment="Left"    MinWidth="100" Width="Auto" Height="Auto" TextChanged="txtJobNumber_TextChanged"
                                         Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" TabIndex="1" Style="{StaticResource CustomTextBoxTextStyle}" >
                                                        <!--{Binding JobNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True }-->
                                                        <TextBox.Text>
                                                            <Binding Path="PumpJobNumber" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                                <Binding.ValidationRules>
                                                                    <local:MandatoryRule PropertyName="PumpJobNumber"/>
                                                                    <ExceptionValidationRule/>
                                                                </Binding.ValidationRules>
                                                            </Binding>

                                                        </TextBox.Text>
                                                    </TextBox>
                                                </StackPanel>
                                            </Grid>
                                            <StackPanel Orientation="Vertical" Grid.Row="1" Grid.Column="0" Margin="2" >
                                                <Label Grid.Row="4" x:Name="lblPumpReportNumber" Content="Report Number" HorizontalAlignment="Left" VerticalAlignment="Top" />
                                                <TextBox Grid.Row="3" x:Name="txtPumpReportNumber" HorizontalAlignment="Left"    MinWidth="100" Width="Auto" Height="Auto" TextChanged="TxtPumpReportNumber_TextChanged"
                                         Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" TabIndex="1" Style="{StaticResource CustomTextBoxTextStyle}" >
                                                    <!--{Binding JobNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True }-->
                                                    <TextBox.Text>
                                                        <Binding Path="PumpReportNumber" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                            <Binding.ValidationRules>
                                                                <local:MandatoryRule PropertyName="PumpReportNumber"/>
                                                                <ExceptionValidationRule/>
                                                            </Binding.ValidationRules>
                                                        </Binding>

                                                    </TextBox.Text>
                                                </TextBox>
                                            </StackPanel>
                                            <Grid Grid.Row="2" Grid.Column="0" Margin="2">
                                                <StackPanel Orientation="Vertical" Grid.Column="0" Visibility="Collapsed">
                                                    <Label  Grid.Row="2" x:Name="lblPumpSPGSerialNo" Content="SPG Serial No" HorizontalAlignment="Left"  VerticalAlignment="Top" Height="Auto"/>
                                                    <TextBox Grid.Row="3" x:Name="txtPumpSPGSerialNo" HorizontalAlignment="Left"    MinWidth="150" Width="Auto" Height="Auto" TextChanged="txtJobNumber_TextChanged"
                                         Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" TabIndex="1" Style="{StaticResource CustomTextBoxTextStyle}" >
                                                        <!--{Binding JobNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True }-->
                                                        <TextBox.Text>
                                                            <Binding Path="PumpSPGSerialNo" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                                <Binding.ValidationRules>
                                                                    <local:MandatoryRule PropertyName="PumpSPGSerialNo"/>
                                                                    <ExceptionValidationRule/>
                                                                </Binding.ValidationRules>
                                                            </Binding>

                                                        </TextBox.Text>
                                                    </TextBox>
                                                </StackPanel>
                                            </Grid>
                                        </Grid>
                                    </GroupBox>

                                    <GroupBox Grid.Column="1" Margin="5,2,5,5" Foreground="#9D2933" BorderBrush="Orange" Height="200" VerticalAlignment="Top">
                                        <GroupBox.Header>
                                            <TextBlock FontWeight="Bold">Equipment Details</TextBlock>
                                        </GroupBox.Header>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="53*"/>
                                                <ColumnDefinition Width="51*"/>
                                                <ColumnDefinition Width="103*"/>
                                                <ColumnDefinition Width="103*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="0" Margin="2" Grid.ColumnSpan="2">
                                                <Label Grid.Row="0" x:Name="lblEqipCustomerName" Content="Customer Name" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                                <TextBox Grid.Row="1" x:Name="txtEqipCustomerName"  HorizontalAlignment="Left" Height="Auto"  TextWrapping="Wrap"  MinWidth="100" Width="Auto"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="2">
                                                    <TextBox.Text>
                                                        <Binding Path="EqipCustomerName" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                            <Binding.ValidationRules>
                                                                <local:MandatoryRule PropertyName="EqipCustomerName"/>
                                                                <ExceptionValidationRule/>
                                                            </Binding.ValidationRules>
                                                        </Binding>
                                                    </TextBox.Text>
                                                </TextBox>
                                            </StackPanel>

                                            <StackPanel Orientation="Vertical"  Grid.Row="0" Grid.Column="3" Margin="2">

                                                <Label  Grid.Row="0" x:Name="lblEquipManufacturer" Content="Manufacturer" HorizontalAlignment="Left"  VerticalAlignment="Top"/>
                                                <TextBox Grid.Row="1" x:Name="txtEquipManufacturer" HorizontalAlignment="Left"  TextWrapping="Wrap" MinWidth="100" Width="Auto" Height="Auto"
                                         Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="3" >
                                                    <TextBox.Text>
                                                        <Binding Path="EquipManufacturer" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                            <Binding.ValidationRules>
                                                                <local:MandatoryRule PropertyName="EquipManufacturer"/>
                                                                <ExceptionValidationRule/>
                                                            </Binding.ValidationRules>
                                                        </Binding>

                                                    </TextBox.Text>
                                                </TextBox>
                                            </StackPanel>
                                            <StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="2" Margin="2">
                                                <Label Grid.Row="0" x:Name="lblEquipType" Content="Type" HorizontalAlignment="Left"  VerticalAlignment="Top"/>
                                                <TextBox Grid.Row="1" x:Name="txtEquipType" HorizontalAlignment="Left" Height="Auto" TextWrapping="Wrap" VerticalAlignment="Center"  MinWidth="100"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="5">
                                                    <TextBox.Text>
                                                        <Binding Path="EquipType" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                            <Binding.ValidationRules>
                                                                <local:MandatoryRule PropertyName="EquipType"/>
                                                                <ExceptionValidationRule/>
                                                            </Binding.ValidationRules>
                                                        </Binding>
                                                    </TextBox.Text>
                                                </TextBox>
                                            </StackPanel>

                                            <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="0"  Margin="2" Grid.ColumnSpan="2">
                                                <StackPanel Orientation="Vertical"  >
                                                    <Label Grid.Row="0" x:Name="lblEquipModelNo" Content="Model No" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                                    <TextBox Grid.Row="1" x:Name="txtEquipModelNo" HorizontalAlignment="Left" Height="Auto" MinWidth="100"  TextWrapping="Wrap"  VerticalAlignment="Center"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="4">
                                                        <TextBox.Text>
                                                            <Binding Path="EquipModelNo" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                                <Binding.ValidationRules>
                                                                    <local:MandatoryRule PropertyName="EquipModelNo"/>
                                                                    <ExceptionValidationRule/>
                                                                </Binding.ValidationRules>
                                                            </Binding>
                                                        </TextBox.Text>
                                                    </TextBox>
                                                </StackPanel>


                                            </StackPanel>

                                            <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="2"  Margin="2">
                                                <StackPanel Orientation="Vertical"  >
                                                    <Label Grid.Row="0" x:Name="lblEquipSerialNo" Content="Serial No" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                                    <TextBox Grid.Row="1" x:Name="txtEquipSerialNo" HorizontalAlignment="Left" Height="Auto" MinWidth="100"  TextWrapping="Wrap"  VerticalAlignment="Center"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="4">
                                                        <TextBox.Text>
                                                            <Binding Path="EquipSerialNo" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                                <Binding.ValidationRules>
                                                                    <local:MandatoryRule PropertyName="EquipSerialNo"/>
                                                                    <ExceptionValidationRule/>
                                                                </Binding.ValidationRules>
                                                            </Binding>
                                                        </TextBox.Text>
                                                    </TextBox>
                                                </StackPanel>


                                            </StackPanel>

                                            <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="3"  Margin="2">
                                                <StackPanel Orientation="Vertical"  >
                                                    <Label Grid.Row="0" x:Name="lblEquipControlType" Content="Control Type" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                                    <TextBox Grid.Row="1" x:Name="txtEquipControlType" HorizontalAlignment="Left" Height="Auto" MinWidth="100"  TextWrapping="Wrap"  VerticalAlignment="Center"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="4">
                                                        <TextBox.Text>
                                                            <Binding Path="EquipControlType" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                                <Binding.ValidationRules>
                                                                    <local:MandatoryRule PropertyName="EquipControlType"/>
                                                                    <ExceptionValidationRule/>
                                                                </Binding.ValidationRules>
                                                            </Binding>
                                                        </TextBox.Text>
                                                    </TextBox>
                                                </StackPanel>


                                            </StackPanel>

                                            <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="0"  Margin="2" Grid.ColumnSpan="2">
                                                <StackPanel Orientation="Vertical"  >
                                                    <Label Grid.Row="0" x:Name="lblEquipPumpType" Content="Pump Type" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                                    <TextBox Grid.Row="1" x:Name="txtEquipPumpType" HorizontalAlignment="Left" Height="Auto" MinWidth="100"  TextWrapping="Wrap"  VerticalAlignment="Center"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="4">
                                                        <TextBox.Text>
                                                            <Binding Path="EquipPumpType" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                                <Binding.ValidationRules>
                                                                    <local:MandatoryRule PropertyName="EquipPumpType"/>
                                                                    <ExceptionValidationRule/>
                                                                </Binding.ValidationRules>
                                                            </Binding>
                                                        </TextBox.Text>
                                                    </TextBox>
                                                </StackPanel>


                                            </StackPanel>


                                        </Grid>
                                    </GroupBox>

                                    <GroupBox Grid.Column="2" Margin="5,2,0,5" Foreground="#9D2933" BorderBrush="Orange" Height="200" VerticalAlignment="Top">
                                        <GroupBox.Header>
                                            <TextBlock FontWeight="Bold">Test Bench Details</TextBlock>
                                        </GroupBox.Header>
                                        <Grid Margin="0,0,0,0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>

                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="0" Margin="1">
                                                <Label Grid.Row="0" x:Name="lblTestManufacturer" Content="Manufacturer" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                                <TextBox Grid.Row="1" x:Name="txtTestManufacturer" HorizontalAlignment="Left" Height="Auto"  MinWidth="100" Width="Auto"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="2">
                                                    <TextBox.Text>
                                                        <Binding Path="TestManufacture" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                            <Binding.ValidationRules>
                                                                <local:MandatoryRule PropertyName="TestManufacture"/>
                                                                <ExceptionValidationRule/>
                                                            </Binding.ValidationRules>
                                                        </Binding>
                                                    </TextBox.Text>
                                                </TextBox>
                                            </StackPanel>

                                            <StackPanel Orientation="Vertical"  Grid.Row="0" Grid.Column="2" Margin="2">
                                                <Label  Grid.Row="0" x:Name="lblTestType" Content="Type" HorizontalAlignment="Left"  VerticalAlignment="Top"/>
                                                <TextBox Grid.Row="1" x:Name="txtTestType"  HorizontalAlignment="Left"  MinWidth="100"  Height="Auto"
                                         Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="3" >
                                                    <TextBox.Text>
                                                        <Binding Path="TestType" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                            <Binding.ValidationRules>
                                                                <local:MandatoryRule PropertyName="TestType"/>
                                                                <ExceptionValidationRule/>
                                                            </Binding.ValidationRules>
                                                        </Binding>

                                                    </TextBox.Text>
                                                </TextBox>
                                            </StackPanel>


                                            <StackPanel Orientation="Vertical" Grid.Row="2" Grid.Column="0" Margin="2">
                                                <Label Grid.Row="0" x:Name="lblTestedBy" Content="TestedBy" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                                <TextBox Grid.Row="1" x:Name="txtTestedBy"   HorizontalAlignment="Left" Height="Auto"  MinWidth="100"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="6">
                                                    <TextBox.Text>
                                                        <Binding Path="TestedBy" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                            <Binding.ValidationRules>
                                                                <local:MandatoryRule PropertyName="TestedBy"/>
                                                                <ExceptionValidationRule/>
                                                            </Binding.ValidationRules>
                                                        </Binding>
                                                    </TextBox.Text>
                                                </TextBox>
                                            </StackPanel>
                                            <StackPanel Orientation="Vertical" Grid.Row="2" Grid.Column="1" Margin="2">
                                                <Label Grid.Row="0" x:Name="lblWitnessedBy" Content="WitnessedBy" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                                <TextBox Grid.Row="1" x:Name="txtWitnessedBy"   HorizontalAlignment="Left" Height="Auto"  MinWidth="100" 
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="6">
                                                    <TextBox.Text>
                                                        <Binding Path="WitnessedBy" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                            <Binding.ValidationRules>
                                                                <local:MandatoryRule PropertyName="WitnessedBy"/>
                                                                <ExceptionValidationRule/>
                                                            </Binding.ValidationRules>
                                                        </Binding>
                                                    </TextBox.Text>
                                                </TextBox>
                                            </StackPanel>
                                            <StackPanel Orientation="Vertical" Grid.Row="2" Grid.Column="2" Margin="2">
                                                <Label Grid.Row="0" x:Name="lblApprovedBy" Content="ApprovedBy" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                                <TextBox Grid.Row="1" x:Name="txtApprovedBy"   HorizontalAlignment="Left" Height="Auto"  MinWidth="100"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="6">
                                                    <TextBox.Text>
                                                        <Binding Path="ApprovedBy" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                            <Binding.ValidationRules>
                                                                <local:MandatoryRule PropertyName="ApprovedBy"/>
                                                                <ExceptionValidationRule/>
                                                            </Binding.ValidationRules>
                                                        </Binding>
                                                    </TextBox.Text>
                                                </TextBox>
                                            </StackPanel>






                                            <StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="1" Margin="2">
                                                <Label Grid.Row="0" x:Name="lblTestSerialNo" Content="Serial No" HorizontalAlignment="Left"  VerticalAlignment="Top"/>
                                                <TextBox Grid.Row="1" x:Name="txtTestSerialNo" HorizontalAlignment="Left" Height="Auto" TextWrapping="Wrap" VerticalAlignment="Center" MinWidth="100"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="5">
                                                    <TextBox.Text>
                                                        <Binding Path="TestSerialNo" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                            <Binding.ValidationRules>
                                                                <local:MandatoryRule PropertyName="TestSerialNo"/>
                                                                <ExceptionValidationRule/>
                                                            </Binding.ValidationRules>
                                                        </Binding>
                                                    </TextBox.Text>
                                                </TextBox>
                                            </StackPanel>

                                            <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="0"  Margin="2">
                                                <StackPanel Orientation="Vertical"  >
                                                    <Label Grid.Row="0" x:Name="lblTestRange" Content="Range" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                                    <TextBox Grid.Row="1" x:Name="txtTestRange"  HorizontalAlignment="Left" Height="Auto" MinWidth="100" TextWrapping="Wrap"  VerticalAlignment="Center"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="4">
                                                        <TextBox.Text>
                                                            <Binding Path="TestRange" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                                <Binding.ValidationRules>
                                                                    <local:MandatoryRule PropertyName="TestRange"/>
                                                                    <ExceptionValidationRule/>
                                                                </Binding.ValidationRules>
                                                            </Binding>
                                                        </TextBox.Text>
                                                    </TextBox>
                                                </StackPanel>
                                            </StackPanel>
                                            <!-- <StackPanel Orientation="Vertical" Grid.Row="2" Grid.Column="1" Margin="2">
                                        <Label Grid.Row="0" x:Name="lblWItnessedBy" Content="WItnessedBy" HorizontalAlignment="Left"  VerticalAlignment="Top"/>
                                        <TextBox Grid.Row="1" x:Name="txtWItnessedBy" HorizontalAlignment="Left" Height="Auto" TextWrapping="Wrap" VerticalAlignment="Center" MinWidth="150"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="7">
                                            <TextBox.Text>
                                                <Binding Path="TestSerialNo" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                    <Binding.ValidationRules>
                                                        <local:MandatoryRule PropertyName="TestSerialNo"/>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </StackPanel>-->
                                        </Grid>
                                    </GroupBox>
                                    <!--                                MyUpdate-->
                                    <!--<GroupBox Grid.Column="3" Margin="5,2,0,5" Foreground="#9D2933" BorderBrush="Orange">
                                <GroupBox.Header>
                                    <TextBlock FontWeight="Bold">Test Approved Details</TextBlock>
                                </GroupBox.Header>
                                <Grid >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>

                                    <StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="0" Margin="2">
                                        <Label Grid.Row="0" x:Name="lblTestedBye" Content="TestedBye" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                        <TextBox Grid.Row="1" x:Name="txtTestedBye"   HorizontalAlignment="Left" Height="Auto"  MinWidth="150" Width="Auto"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="6">
                                            <TextBox.Text>
                                                <Binding Path="TestedBye" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                    <Binding.ValidationRules>
                                                        <local:MandatoryRule PropertyName="TestedBye"/>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </StackPanel>
                                    <StackPanel Orientation="Vertical" Grid.Row="1" Grid.Column="0" Margin="2">
                                        <Label Grid.Row="0" x:Name="lblWitnessedBye" Content="WitnessedBye" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                        <TextBox Grid.Row="1" x:Name="txtWitnessedBye"   HorizontalAlignment="Left" Height="Auto"  MinWidth="150" Width="Auto"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="6">
                                            <TextBox.Text>
                                                <Binding Path="WitnessedBye" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                    <Binding.ValidationRules>
                                                        <local:MandatoryRule PropertyName="WitnessedBye"/>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </StackPanel>
                                    <StackPanel Orientation="Vertical" Grid.Row="2" Grid.Column="0" Margin="2">
                                        <Label Grid.Row="0" x:Name="lblApprovedBye" Content="ApprovedBye" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                        <TextBox Grid.Row="1" x:Name="txtApprovedBye"   HorizontalAlignment="Left" Height="Auto"  MinWidth="150" Width="Auto"
                                             Validation.ErrorTemplate="{StaticResource validationErrorTemplate}" Style="{StaticResource CustomTextBoxTextStyle}" TabIndex="6">
                                            <TextBox.Text>
                                                <Binding Path="ApprovedBye" UpdateSourceTrigger="PropertyChanged" TargetNullValue="" ValidatesOnNotifyDataErrors="True" ValidatesOnExceptions="True" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                    <Binding.ValidationRules>
                                                        <local:MandatoryRule PropertyName="ApprovedBye"/>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </StackPanel>

                                </Grid>
                            </GroupBox>-->
                                </Grid>

                            </Grid>
                        </TabItem>
                        <TabItem>
                            <TabItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="/ElpisOpcServer;component/Images/monitoring_data.png" Width="30" Height="30" />
                                    <TextBlock Text="Data Recording" Width="Auto" Margin="2,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="DemiBold"/>
                                </StackPanel>
                            </TabItem.Header>
                            <TabItem.Style>
                                <Style TargetType="{x:Type TabItem}">
                                    <Setter Property="HeaderTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <ContentPresenter Content="{TemplateBinding Content}">
                                                    <ContentPresenter.LayoutTransform>
                                                        <RotateTransform Angle="270" />
                                                    </ContentPresenter.LayoutTransform>
                                                </ContentPresenter>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Padding" Value="0,10,0,10" />
                                </Style>
                            </TabItem.Style>
                            <TabControl Name="tabControlTest" SelectionChanged="tabControlTest_SelectionChanged">

                                <TabItem IsEnabled="True" Visibility="Collapsed">
                                    <TabItem.Header  >
                                        <StackPanel Orientation="Horizontal">
                                            <Image Name="img" Height="30" Width="30" Source="/ElpisOpcServer;component/Images/flow_icon.png"/>
                                            <TextBlock Text="Stroke Test" Margin="6,0,0,0" VerticalAlignment="Center"  HorizontalAlignment="Center" FontWeight="DemiBold" />
                                        </StackPanel>
                                    </TabItem.Header>
                                    <Grid Background="#FFF0E6DC">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <ContentPresenter Name="contentStrokeTest" Margin="0,0,0.2,-0.4"/>
                                    </Grid>
                                </TabItem>

                                <TabItem Width="Auto"  IsEnabled="True" Visibility="Collapsed" >
                                    <TabItem.Header >

                                        <StackPanel Orientation="Horizontal">
                                            <Image Source="/ElpisOpcServer;component/Images/PressureGauge.png" Width="30" Height="30"  />

                                            <TextBlock Text="Hold Mid Position Test " Width="Auto" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="6,0,0,0" FontWeight="DemiBold"/>
                                        </StackPanel>

                                    </TabItem.Header>

                                    <Grid Background="#FFF0E6DC">
                                        <ContentPresenter Name="contentHoldMidTestLineA" />

                                    </Grid>

                                </TabItem>
                                <!--<TabItem Header="Hold Mid Position LineB Test" IsEnabled="False">
                                    <Grid Background="#FFF0E6DC">
                                        <ContentPresenter Name="contentHoldMidTestLineB" />
                                    </Grid>

                                </TabItem>-->
                                <TabItem  IsEnabled="True" Visibility="Collapsed">
                                    <TabItem.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <Image Source="/ElpisOpcServer;component/Images/cylinder.png" Height="30" Width="30"  />
                                            <TextBlock Text="Slip Stick Test" VerticalAlignment="Center" HorizontalAlignment="Center" Width="Auto" Margin="6,0,0,0" FontWeight="DemiBold"/>
                                        </StackPanel>
                                    </TabItem.Header>
                                    <Grid Background="#FFF0E6DC">
                                        <ContentPresenter Name="contentSlipStickTest"/>
                                    </Grid>
                                </TabItem>
                                <TabItem  IsEnabled="True">
                                    <TabItem.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <Image Source="/ElpisOpcServer;component/Images/pump-icon.png" Height="30" Width="30"  />
                                            <TextBlock Text="Pump Test" VerticalAlignment="Center" HorizontalAlignment="Center" Width="Auto" Margin="6,0,0,0" FontWeight="DemiBold"/>
                                        </StackPanel>
                                    </TabItem.Header>
                                    <Grid Background="#FFF0E6DC">
                                        <ContentPresenter Name="contentPumpTest"/>
                                    </Grid>
                                </TabItem>
                            </TabControl>
                        </TabItem>
                    </TabControl>
                </Border>

            </Grid>
            <!--</Expander>-->
        </Grid>
        <Grid Grid.Row="3" Grid.Column="2 " Background="#FFF0E6DC" VerticalAlignment="Bottom" HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions >
                <ColumnDefinition Width="1*"></ColumnDefinition>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>

            <Grid  VerticalAlignment="Bottom" Width="Auto">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" Width="Auto" >
                    <TextBlock Text="Reports Location:  "  FontSize="11" FontWeight="Bold" Margin="5,0,2.8,0.4" VerticalAlignment="Center" Height="14" />
                </StackPanel>
                <StackPanel Grid.Column="1" Width="Auto" HorizontalAlignment="Left" Margin="2,0,0,0">
                    <TextBlock Name="tbxReportsPath" Visibility="Collapsed" Text="{Binding Path=ReportLocation,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  FontSize="11" VerticalAlignment="Center"  Height="14" />
                </StackPanel>
                <StackPanel Grid.Column="2" Width="Auto" HorizontalAlignment="Left"  >
                    <Button FontSize="5" Padding="0"  BorderThickness="1"  Grid.Column="2" Style="{StaticResource btnGreen}"   Click="btnOpenLocation_click" FontFamily="Times New Roman"   >
                        <Button.Content >

                            <StackPanel Orientation="Horizontal"  VerticalAlignment="Center" HorizontalAlignment="Center" Height="12" >
                                <Image Source="/ElpisOpcServer;component/Images/folder.png" Stretch="Fill" Width="11" Height="10"  />
                                <TextBlock Text="Open" FontSize="7.8" Margin="0,1,0,0"  />
                            </StackPanel>

                        </Button.Content>
                    </Button>
                </StackPanel>
            </Grid>

            <!--<Expander Name="expComment_box" Grid.Column="2"  Header="Comment Box" HorizontalAlignment="Left" Height="121" VerticalAlignment="Top" Width="300" ExpandDirection="Up" Margin="0,-106,0,0" IsExpanded="False" FontSize="11" Style="{DynamicResource ExpanderStyle1}"  >
                <Grid Background="#FFF0E6DC" >
                    <StackPanel  >

                        <TextBox Name="txtCommentBox" Height="72" AcceptsReturn="True" TextWrapping="Wrap" Margin="0,0,-0.2,0" FontSize="15" FontStyle="Normal"  FontFamily="Arial"/>
                        <Grid Margin="0,0,-0.2,0" Height="27" HorizontalAlignment="Right">
                            <Grid.ColumnDefinitions >

                                <ColumnDefinition Width="80*"/>
                                <ColumnDefinition Width="35.2"/>
                                <ColumnDefinition Width="35.2"/>

                            </Grid.ColumnDefinitions>
                            <TextBlock Name="txtCommnetUpdateMessage" FontSize="8" FontFamily="Arial" FontWeight="Bold" Foreground="Green" Text="" VerticalAlignment="Bottom"/>
                            <Button   Click="btnUpdate_comment" Grid.Column="1"  Style="{StaticResource ButtonStyle}" Margin="0.4,0,-1.2,0" HorizontalAlignment="Center">
                                <Button.Content>
                                    <StackPanel>
                                        <Image Source="/ElpisOpcServer;component/Images/Ok_check.ico" Height="25" HorizontalAlignment="Right" Width="20" ToolTip="Update Comment"/>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                            <Button  Click="btnCollapse_comment"  Grid.Column="2" Style="{StaticResource ButtonStyle}" Margin="0,0,2.8,0" HorizontalAlignment="Right" Width="30">
                                <Button.Content>
                                    <StackPanel>
                                        <Image Source="/ElpisOpcServer;component/Images/deletered.png" Height="25" HorizontalAlignment="Center" ToolTip="Close"/>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                        </Grid>
                    </StackPanel>
                </Grid>
            </Expander>-->

            <!--<Expander Name="expTestDetails_box" Visibility="Hidden" Grid.Column="1" Header="Test Deatils Box" HorizontalAlignment="Right" Height="121" VerticalAlignment="Top" Width="300" ExpandDirection="Up" Margin="0,-106,0,0" IsExpanded="False" FontSize="11" Style="{DynamicResource ExpanderStyle1}"  >
                -->
            <!--<Grid Background="#FFF0E6DC" >
                    <StackPanel  >

                        <TextBox Name="txtTestDetailsBox" Height="72" AcceptsReturn="True" TextWrapping="Wrap" Margin="0,0,-0.2,0" FontSize="15" FontStyle="Normal"  FontFamily="Arial"/>
                        <Grid Margin="0,0,-0.2,0" Height="27" HorizontalAlignment="Right">
                            <Grid.ColumnDefinitions >

                                <ColumnDefinition Width="80*"/>
                                <ColumnDefinition Width="35.2"/>
                                <ColumnDefinition Width="35.2"/>

                            </Grid.ColumnDefinitions>
                            <TextBlock Name="txtTestDetailsMessage" FontSize="8" FontFamily="Arial" FontWeight="Bold" Foreground="Green" Text="" VerticalAlignment="Bottom"/>
                            <Button   Click="btnTestDeatils_Update" Grid.Column="1"  Style="{StaticResource ButtonStyle}" Margin="0.4,0,-1.2,0" HorizontalAlignment="Center">
                                <Button.Content>
                                    <StackPanel>
                                        <Image Source="/ElpisOpcServer;component/Images/Ok_check.ico" Height="25" HorizontalAlignment="Right" Width="20" ToolTip="Update Comment"/>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                            <Button  Click="btnCollaps_TestDetails"  Grid.Column="2" Style="{StaticResource ButtonStyle}" Margin="0,0,2.8,0" HorizontalAlignment="Right" Width="30">
                                <Button.Content>
                                    <StackPanel>
                                        <Image Source="/ElpisOpcServer;component/Images/deletered.png" Height="25" HorizontalAlignment="Center" ToolTip="Close"/>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                        </Grid>
                    </StackPanel>
                </Grid>-->
            <!--
            </Expander>-->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right"  Grid.Column="1" Margin="0,0,250,0">

                <ToggleButton Style="{StaticResource tBtnGreen}" Margin="0,0,40,0" VerticalAlignment="Bottom"  Grid.Column="0"  x:Name="BtnTestDetails"  Content="Test Details Box" FontSize="10" FontWeight="Bold"  HorizontalAlignment="Right" />
                <ToggleButton Grid.Column="1" Style="{StaticResource tBtnGreen}" VerticalAlignment="Bottom"  x:Name="BtnCommentBox"  Content="Comment Box" BorderBrush="Transparent" FontSize="10" FontWeight="Bold"  HorizontalAlignment="Right" />

            </StackPanel>


        </Grid>
        <!--test details box-->
        <Popup Width="300" StaysOpen="False" HorizontalAlignment="Right" PlacementTarget="{Binding ElementName=BtnTestDetails}" IsOpen="{Binding ElementName=BtnTestDetails, Path=IsChecked,Mode=TwoWay}" Placement="Top" >
            <Grid Background="LightGray"  >
                <StackPanel  >
                    <Label Content="Test Details Box"/>
                    <TextBox Name="txtTestDetailsBox" Height="72" AcceptsReturn="True" TextWrapping="Wrap" Margin="0,0,-0.2,0" FontSize="15" FontStyle="Normal"  FontFamily="Arial"/>
                    <Grid Margin="0,0,-0.2,0" Height="27" HorizontalAlignment="Right">
                        <Grid.ColumnDefinitions >

                            <ColumnDefinition Width="80*"/>
                            <ColumnDefinition Width="35.2"/>
                            <ColumnDefinition Width="35.2"/>

                        </Grid.ColumnDefinitions>
                        <TextBlock Name="txtTestDetailsMessage" FontSize="8" FontFamily="Arial" FontWeight="Bold" Foreground="Green" Text="" VerticalAlignment="Center" />
                        <Button   Click="btnTestDeatils_Update" Grid.Column="1"  Style="{StaticResource ButtonStyle}" Margin="0.4,0,-1.2,0" HorizontalAlignment="Center">
                            <Button.Content>
                                <StackPanel>
                                    <Image Source="/ElpisOpcServer;component/Images/Ok_check.ico" Height="25" HorizontalAlignment="Right" Width="20" ToolTip="Update Comment"/>
                                </StackPanel>
                            </Button.Content>
                        </Button>
                        <Button  Click="btnCollaps_TestDetails"  Grid.Column="2" Style="{StaticResource ButtonStyle}" Margin="0,0,2.8,0" HorizontalAlignment="Right" Width="30">
                            <Button.Content>
                                <StackPanel>
                                    <Image Source="/ElpisOpcServer;component/Images/deletered.png" Height="25" HorizontalAlignment="Center" ToolTip="Close"/>
                                </StackPanel>
                            </Button.Content>
                        </Button>
                    </Grid>
                </StackPanel>
            </Grid>
        </Popup>
        <!--Comment box-->
        <Popup Width="300"  StaysOpen="False" HorizontalAlignment="Right" PlacementTarget="{Binding ElementName=BtnCommentBox}"   IsOpen="{Binding ElementName=BtnCommentBox, Path=IsChecked,Mode=TwoWay}" Placement="Top" >

            <Grid Background="LightGray" >

                <StackPanel  >
                    <Label Content="Comments Box"/>
                    <TextBox Name="txtCommentBox" Height="72" AcceptsReturn="True" TextWrapping="Wrap" Margin="0,0,-0.2,0" FontSize="15" FontStyle="Normal"  FontFamily="Arial"/>
                    <Grid Margin="0,0,-0.2,0" Height="27" HorizontalAlignment="Right">
                        <Grid.ColumnDefinitions >

                            <ColumnDefinition Width="80*"/>
                            <ColumnDefinition Width="35.2"/>
                            <ColumnDefinition Width="35.2"/>

                        </Grid.ColumnDefinitions>
                        <TextBlock Name="txtCommnetUpdateMessage" FontSize="8" FontFamily="Arial" FontWeight="Bold" Foreground="Green" Text="" VerticalAlignment="Center"/>
                        <Button   Click="btnUpdate_comment" Grid.Column="1"  Style="{StaticResource ButtonStyle}" Margin="0.4,0,-1.2,0" HorizontalAlignment="Center">
                            <Button.Content>
                                <StackPanel>
                                    <Image Source="/ElpisOpcServer;component/Images/Ok_check.ico" Height="25" HorizontalAlignment="Right" Width="20" ToolTip="Update Comment"/>
                                </StackPanel>
                            </Button.Content>
                        </Button>
                        <Button  Click="btnCollapse_comment"  Grid.Column="2" Style="{StaticResource ButtonStyle}" Margin="0,0,2.8,0" HorizontalAlignment="Right" Width="30">
                            <Button.Content>
                                <StackPanel>
                                    <Image Source="/ElpisOpcServer;component/Images/deletered.png" Height="25" HorizontalAlignment="Center" ToolTip="Close"/>
                                </StackPanel>
                            </Button.Content>
                        </Button>
                    </Grid>
                </StackPanel>
            </Grid>
        </Popup>
        <!--TODO:test dragable popup-->
        <!--<local:DraggablePopup Width="300"
                      Height="200"
                      IsOpen="True"
                      Placement="Center"
                      PlacementTarget="{Binding RelativeSource={RelativeSource AncestorType=Window}}"
                     >
            <Border 
         BorderBrush="Black"
         BorderThickness="1" >
            </Border>
        </local:DraggablePopup>-->
    </Grid>


</UserControl>
